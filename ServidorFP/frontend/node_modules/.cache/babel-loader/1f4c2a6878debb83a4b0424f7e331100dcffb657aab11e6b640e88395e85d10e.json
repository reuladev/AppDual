{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reulo\\\\OneDrive\\\\Escritorio\\\\ServidorFP\\\\frontend\\\\src\\\\components\\\\GetCandidate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // -> Esto es un hook, nos permite acceder al objeto actual.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GetCandidate() {\n  _s();\n  const location = useLocation(); // Obtiene el objeto location\n  const {\n    candidateId2\n  } = location.state || {}; // Obtén el idalumno del estado de \n  const [candidateData, setCandidateData] = useState([]); //Va a almacenar todos del estudiante\n  const [candidateData2, setCandidateData2] = useState([]); //Va a almacenar todos del estudiante\n\n  /*\r\n  Si studentId recibe datos, es actualizado, navegamos hasta /getStudent\r\n  */\n  useEffect(() => {\n    GetCandidateDataById(candidateId2);\n    GetCandidateDataByIdPlusAtributtes(candidateId2);\n    console.log(\"Datos del candidato:\", candidateData);\n    console.log(\"Datos del candidato2:\", candidateData2);\n  }, [candidateId2]);\n\n  /*\r\n  Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n  que coincidan en su nombre con lo solicitado por el usuario.\r\n  */\n  const GetCandidateDataById = async candidateId2 => {\n    try {\n      const bodyParameters = {\n        'idcandidato': candidateId2\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/getCandidateDataById\", options);\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      const jsonResponse = await response.json();\n      setCandidateData(jsonResponse);\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  /*\r\n  Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n  que coincidan en su nombre con lo solicitado por el usuario.\r\n  */\n  const GetCandidateDataByIdPlusAtributtes = async candidateId2 => {\n    try {\n      const bodyParameters = {\n        'idcandidato': candidateId2\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/getCandidateDataByIdPlusAtributtes\", options);\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      const jsonResponse = await response.json();\n      setCandidateData2(jsonResponse);\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-container\",\n    children: candidateData.map((candidate, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"candidate-card\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"candidate-info-list\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Nombre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), \" \", candidate.cnn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(GetCandidate, \"BFaYjnlWK2ayjTz976abOEjJfOU=\", false, function () {\n  return [useLocation];\n});\n_c = GetCandidate;\nexport default GetCandidate;\nvar _c;\n$RefreshReg$(_c, \"GetCandidate\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","GetCandidate","_s","location","candidateId2","state","candidateData","setCandidateData","candidateData2","setCandidateData2","GetCandidateDataById","GetCandidateDataByIdPlusAtributtes","console","log","bodyParameters","options","method","headers","body","JSON","stringify","response","fetch","ok","Error","jsonResponse","json","error","message","className","children","map","candidate","index","fileName","_jsxFileName","lineNumber","columnNumber","cnn","_c","$RefreshReg$"],"sources":["C:/Users/reulo/OneDrive/Escritorio/ServidorFP/frontend/src/components/GetCandidate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom'; // -> Esto es un hook, nos permite acceder al objeto actual.\r\n\r\nfunction GetCandidate() {\r\n  const location = useLocation(); // Obtiene el objeto location\r\n  const {candidateId2} = location.state || {}; // Obtén el idalumno del estado de \r\n  const [candidateData, setCandidateData] = useState([]); //Va a almacenar todos del estudiante\r\n  const [candidateData2, setCandidateData2] = useState([]); //Va a almacenar todos del estudiante\r\n\r\n/*\r\nSi studentId recibe datos, es actualizado, navegamos hasta /getStudent\r\n*/\r\nuseEffect(() => {\r\n    GetCandidateDataById(candidateId2);\r\n    GetCandidateDataByIdPlusAtributtes(candidateId2);\r\n    console.log(\"Datos del candidato:\", (candidateData));\r\n    console.log(\"Datos del candidato2:\", (candidateData2));\r\n    }, [candidateId2]);\r\n\r\n\r\n/*\r\nSolicitamos la peticion para que nos devuela los datos del / los alumnos\r\nque coincidan en su nombre con lo solicitado por el usuario.\r\n*/\r\nconst GetCandidateDataById = async (candidateId2) => {\r\n    try {\r\n        const bodyParameters = {\r\n        'idcandidato': candidateId2\r\n        };\r\n        const options = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(bodyParameters)\r\n        };\r\n        const response = await fetch(\"/getCandidateDataById\", options);\r\n        if (!response.ok) {\r\n        throw new Error('Error en la solicitud');\r\n        }\r\n        const jsonResponse = await response.json();\r\n        setCandidateData(jsonResponse);\r\n    } catch (error) {\r\n        console.error('Error:', error.message);\r\n    }\r\n};\r\n\r\n/*\r\nSolicitamos la peticion para que nos devuela los datos del / los alumnos\r\nque coincidan en su nombre con lo solicitado por el usuario.\r\n*/\r\nconst GetCandidateDataByIdPlusAtributtes = async (candidateId2) => {\r\n    try {\r\n        const bodyParameters = {\r\n        'idcandidato': candidateId2\r\n        };\r\n        const options = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(bodyParameters)\r\n        };\r\n        const response = await fetch(\"/getCandidateDataByIdPlusAtributtes\", options);\r\n        if (!response.ok) {\r\n        throw new Error('Error en la solicitud');\r\n        }\r\n        const jsonResponse = await response.json();\r\n        setCandidateData2(jsonResponse);\r\n    } catch (error) {\r\n        console.error('Error:', error.message);\r\n    }\r\n};\r\n\r\n    return (\r\n        <div className=\"results-container\">\r\n          {candidateData.map((candidate, index) => (\r\n            <div key={index} className=\"candidate-card\">\r\n              <ul className=\"candidate-info-list\">\r\n                <li><strong>Nombre:</strong> {candidate.cnn}</li>\r\n                {/* Agrega aquí más elementos según lo necesites */}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\nexport default GetCandidate;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM;IAACM;EAAY,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5D;AACA;AACA;EACAC,SAAS,CAAC,MAAM;IACZa,oBAAoB,CAACN,YAAY,CAAC;IAClCO,kCAAkC,CAACP,YAAY,CAAC;IAChDQ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAGP,aAAc,CAAC;IACpDM,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAGL,cAAe,CAAC;EACtD,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;;EAGtB;AACA;AACA;AACA;EACA,MAAMM,oBAAoB,GAAG,MAAON,YAAY,IAAK;IACjD,IAAI;MACA,MAAMU,cAAc,GAAG;QACvB,aAAa,EAAEV;MACf,CAAC;MACD,MAAMW,OAAO,GAAG;QAChBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,cAAc;MACnC,CAAC;MACD,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,EAAEP,OAAO,CAAC;MAC9D,IAAI,CAACM,QAAQ,CAACE,EAAE,EAAE;QAClB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MACxC;MACA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1CnB,gBAAgB,CAACkB,YAAY,CAAC;IAClC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZf,OAAO,CAACe,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACC,OAAO,CAAC;IAC1C;EACJ,CAAC;;EAED;AACA;AACA;AACA;EACA,MAAMjB,kCAAkC,GAAG,MAAOP,YAAY,IAAK;IAC/D,IAAI;MACA,MAAMU,cAAc,GAAG;QACvB,aAAa,EAAEV;MACf,CAAC;MACD,MAAMW,OAAO,GAAG;QAChBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,cAAc;MACnC,CAAC;MACD,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAEP,OAAO,CAAC;MAC5E,IAAI,CAACM,QAAQ,CAACE,EAAE,EAAE;QAClB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MACxC;MACA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1CjB,iBAAiB,CAACgB,YAAY,CAAC;IACnC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZf,OAAO,CAACe,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACC,OAAO,CAAC;IAC1C;EACJ,CAAC;EAEG,oBACI5B,OAAA;IAAK6B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC/BxB,aAAa,CAACyB,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBAClCjC,OAAA;MAAiB6B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eACzC9B,OAAA;QAAI6B,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eACjC9B,OAAA;UAAA8B,QAAA,gBAAI9B,OAAA;YAAA8B,QAAA,EAAQ;UAAO;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACL,SAAS,CAACM,GAAG;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE/C;IAAC,GAJGJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnC,EAAA,CA/EID,YAAY;EAAA,QACFH,WAAW;AAAA;AAAAyC,EAAA,GADrBtC,YAAY;AAiFrB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}