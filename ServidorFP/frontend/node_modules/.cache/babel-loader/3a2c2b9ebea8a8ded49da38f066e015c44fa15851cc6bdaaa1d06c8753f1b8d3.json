{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reulo\\\\OneDrive\\\\Escritorio\\\\ServidorFP\\\\frontend\\\\src\\\\components\\\\UpdateStudent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles.css'; // Importa el archivo de estilos CSS global\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchStudentToUpdate() {\n  _s();\n  const [dataStudents, setDataStudents] = useState([]); // Array con los datos de gf_alumnosfct\n  const [requestName, setRequestName] = useState(\"\"); // Contiene el nombre del alumno que solicita modificar\n  const [studentsIds, setStudentsIds] = useState([]); // Un array que contendrá idalumnos, por si hubiese 2 alumnos con el mismo nombre\n\n  useEffect(() => {\n    getAllStudents();\n  }, []);\n  function getAllStudents() {\n    fetch('/getAllStudents').then(response => response.json()).then(dataStudents => {\n      setDataStudents(dataStudents);\n    }).catch(error => {\n      console.error('Error fetching student data:', error); // Manejar errores de la solicitud\n    });\n  }\n  const handleRequestNameChange = event => {\n    setRequestName(event.target.value);\n  };\n  function checkIdStudent(requestName, studentsIds, dataStudents) {\n    for (let i = 0; i < dataStudents.length; i++) {\n      if (requestName === dataStudents[i].name) {\n        studentsIds = dataStudents[i].id;\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-field\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"requestName-input\",\n      children: \"Introduce el alumno que deseas modificar:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: requestName,\n      id: \"requestName-input\",\n      onChange: handleRequestNameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchStudentToUpdate, \"FR8jOvB1+sNB6UIKzvbruVG5plE=\");\n_c = SearchStudentToUpdate;\nfunction UpdateStudentComponent({\n  studentsIds,\n  dataStudents\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dataStudents.map((student, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"curriculumStatus-input\",\n          children: \"Estado del Curriculum:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: student.curriculumStatus,\n          id: \"curriculumStatus-input\",\n          onChange: event => handleCurriculumStatusChange(event, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c2 = UpdateStudentComponent;\nexport default SearchStudentToUpdate;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchStudentToUpdate\");\n$RefreshReg$(_c2, \"UpdateStudentComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SearchStudentToUpdate","_s","dataStudents","setDataStudents","requestName","setRequestName","studentsIds","setStudentsIds","getAllStudents","fetch","then","response","json","catch","error","console","handleRequestNameChange","event","target","value","checkIdStudent","i","length","name","id","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","UpdateStudentComponent","map","student","index","curriculumStatus","handleCurriculumStatusChange","_c2","$RefreshReg$"],"sources":["C:/Users/reulo/OneDrive/Escritorio/ServidorFP/frontend/src/components/UpdateStudent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles.css'; // Importa el archivo de estilos CSS global\r\n\r\nfunction SearchStudentToUpdate() {\r\n  const [dataStudents, setDataStudents] = useState([]); // Array con los datos de gf_alumnosfct\r\n  const [requestName, setRequestName] = useState(\"\"); // Contiene el nombre del alumno que solicita modificar\r\n  const [studentsIds, setStudentsIds] = useState([]); // Un array que contendrá idalumnos, por si hubiese 2 alumnos con el mismo nombre\r\n\r\n  useEffect(() => {\r\n    getAllStudents();\r\n  }, []);\r\n\r\n  function getAllStudents() {\r\n    fetch('/getAllStudents')\r\n      .then(response => response.json())\r\n      .then(dataStudents => {\r\n        setDataStudents(dataStudents);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching student data:', error); // Manejar errores de la solicitud\r\n      });\r\n  }\r\n\r\n  const handleRequestNameChange = (event) => {\r\n    setRequestName(event.target.value);\r\n  };\r\n\r\n  function checkIdStudent(requestName, studentsIds, dataStudents) {\r\n    for (let i = 0; i < dataStudents.length; i++) {\r\n      if (requestName === dataStudents[i].name) {\r\n        studentsIds = dataStudents[i].id;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-field\">\r\n      <label htmlFor=\"requestName-input\">Introduce el alumno que deseas modificar:</label>\r\n      <input\r\n        type=\"text\"\r\n        value={requestName}\r\n        id=\"requestName-input\"\r\n        onChange={handleRequestNameChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UpdateStudentComponent({ studentsIds, dataStudents }) {\r\n\r\n  return (\r\n    <div>\r\n      {dataStudents.map((student, index) => (\r\n        <div key={index}>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"curriculumStatus-input\">Estado del Curriculum:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={student.curriculumStatus}\r\n              id=\"curriculumStatus-input\"\r\n              onChange={(event) => handleCurriculumStatusChange(event, index)}\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchStudentToUpdate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}