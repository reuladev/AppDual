{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reulo\\\\OneDrive\\\\Escritorio\\\\ServidorFP\\\\frontend\\\\src\\\\components\\\\UpdateCandidate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles.css'; // Importa el archivo de estilos CSS global\n\n/* Como hay atributos que tienen un id y no el contenido persé, para estos campos,\r\n   habrá dos atributos, el que se muestre el contenido, y el que mantenga la id.\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchCandidateToUpdate() {\n  _s();\n  const [dataCandidate, setDataCandidate] = useState([]); //Este es el array que va a contener los atributos de la tabla candidatos para el alumno solicitado.\n  const [dataIdsCandidate, setDataIdsCandidate] = useState([]); //Este es el array que va a contener el contenido de los campos que tienen una id encuenta del contenido.\n  const [dataStudent, setDataStudent] = useState([]); // ¿Es necesario?\n  const [candidateId, setCandidateId] = useState(\"\");\n  const [studentName, setStudentName] = useState(\"\"); //Esta variable va a guardar el nombre del alumno que quiera buscar el usuario.\n\n  // Estos son los atributos REALES, alguno se muestran y otros, los que tienen la id, no.\n  const [studentId, setStudentId] = useState(\"\");\n  const [assignmentDate, setAssignmentDate] = useState(\"\");\n  const [studentDualStatus, setStudentDualStatus] = useState(\"\");\n  const [company1Status, setCompany1Status] = useState(\"\");\n  const [company2Status, setCompany2Status] = useState(\"\");\n  const [company3Status, setCompany3Status] = useState(\"\");\n  const [firstCompany, setFirstCompany] = useState(\"\");\n  const [secondCompany, setSecondCompany] = useState(\"\");\n  const [thirdCompany, setThirdCompany] = useState(\"\");\n  const [hiredCompany, setHiredCompany] = useState(\"\");\n  const [dualStudentEmail, setDualStudentEmail] = useState(\"\");\n  const [companyOpinion, setCompanyOpinion] = useState(\"\");\n  const [observations, setObservations] = useState(\"\");\n  const [shift, setShift] = useState(\"\");\n  const [receivedAttachment, setReceivedAttachment] = useState(\"\");\n  const [filledAttachment, setFilledAttachment] = useState(\"\");\n  const [calendarStatus, setCalendarStatus] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const [relationshipType, setRelationshipType] = useState(\"\");\n  const [cno, setCno] = useState(\"\");\n  // Estos son los atributos que se MUESTRAN al usuario\n  const [studentIdName, setStudentIdName] = useState(\"\");\n  const [studentDualStatusName, setStudentDualStatusName] = useState(\"\");\n  const [company1StatusName, setCompany1StatusName] = useState(\"\");\n  const [company2StatusName, setCompany2StatusName] = useState(\"\");\n  const [company3StatusName, setCompany3StatusName] = useState(\"\");\n  const [firstCompanyName, setFirstCompanyName] = useState(\"\");\n  const [secondCompanyName, setSecondCompanyName] = useState(\"\");\n  const [thirdCompanyName, setThirdCompanyName] = useState(\"\");\n  const [hiredCompanyName, setHiredCompanyName] = useState(\"\");\n  useEffect(() => {\n    FoundStudentIdsData(studentId, studentDualStatus, company1Status, company2Status, company3Status, firstCompany, secondCompany, thirdCompany, hiredCompany);\n    FoundStudentIdsByUserRequest(studentIdName, studentDualStatusName, company1StatusName, company2StatusName, company3StatusName, firstCompanyName, secondCompanyName, thirdCompanyName, hiredCompanyName);\n  }, [studentId, studentDualStatus, company1Status, company2Status, company3Status, firstCompany, secondCompany, thirdCompany, hiredCompany, studentIdName, studentDualStatusName, company1StatusName, company2StatusName, company3StatusName, firstCompanyName, secondCompanyName, thirdCompanyName, hiredCompanyName]);\n\n  /*\r\n      Peticion para actualizar los registros de un estudiante.\r\n  */\n  const UpdateCandidate = async (studentId, assignmentDate, studentDualStatus, company1Status, company2Status, company3Status, firstCompany, secondCompany, thirdCompany, hiredCompany, dualStudentEmail, companyOpinion, observations, shift, receivedAttachment, filledAttachment, calendarStatus, attachment, relationshipType, cno, candidateId) => {\n    try {\n      const bodyParameters = {\n        'idalumno': studentId,\n        'fechaasignacion': assignmentDate,\n        'estadodualalumno': studentDualStatus,\n        'estadoempresa1': company1Status,\n        'estadoempresa2': company2Status,\n        'estadoempresa3': company3Status,\n        'primeraempresa': firstCompany,\n        'segundaempresa': secondCompany,\n        'terceraempresa': thirdCompany,\n        'empresacontratada': hiredCompany,\n        'emaildualalumno': dualStudentEmail,\n        'opinionempresa': companyOpinion,\n        'observaciones': observations,\n        'turno': shift,\n        'anexorecibido': receivedAttachment,\n        'anexorellenado': filledAttachment,\n        'estadocalendario': calendarStatus,\n        'anexo': attachment,\n        'tiporelacion': relationshipType,\n        'cno': cno,\n        'idcandidato': candidateId\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/updateCandidate\", options);\n      if (!response.ok) {\n        throw new Error('Error al buscar ids de candidato');\n      }\n      const jsonResponse = await response.json();\n      // Solo si la respuesta contiene datos\n      console.log(\"Contenido de la peticion getCandidatesIdFromData: \" + jsonResponse);\n      if (jsonResponse.length > 0) {} else {\n        console.log(\"No se encontraron datos para el estudiante solicitado.\");\n      }\n      return jsonResponse;\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  /*\r\n      Peticion para obtener las ids de cada campo segun el contenido introducido por el usuario\r\n  */\n  const FoundStudentIdsByUserRequest = async (studentIdName, studentDualStatusName, company1StatusName, company2StatusName, company3StatusName, firstCompanyName, secondCompanyName, thirdCompanyName, hiredCompanyName) => {\n    try {\n      const bodyParameters = {\n        'idalumno': studentIdName,\n        'estadodualalumno': studentDualStatusName,\n        'estadoempresa1': company1StatusName,\n        'estadoempresa2': company2StatusName,\n        'estadoempresa3': company3StatusName,\n        'primeraempresa': firstCompanyName,\n        'segundaempresa': secondCompanyName,\n        'terceraempresa': thirdCompanyName,\n        'empresacontratada': hiredCompanyName\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/getCandidatesIdFromData\", options);\n      if (!response.ok) {\n        throw new Error('Error al buscar ids de candidato');\n      }\n      const jsonResponse = await response.json();\n      // Solo si la respuesta contiene datos\n      console.log(\"Contenido de la peticion getCandidatesIdFromData: \" + jsonResponse);\n      if (jsonResponse.length > 0) {\n        const dataIdsCandidate = jsonResponse[0]; // Accede al primer objeto del array\n        // Asigna los valores a las variables de estado\n        setStudentId(dataIdsCandidate.idalumno);\n        setStudentDualStatus(dataIdsCandidate.estadodualalumno);\n        setCompany1Status(dataIdsCandidate.estadoempresa1);\n        setCompany2Status(dataIdsCandidate.estadoempresa2);\n        setCompany3Status(dataIdsCandidate.estadoempresa3);\n        setFirstCompany(dataIdsCandidate.primeraempresa);\n        setSecondCompany(dataIdsCandidate.segundaempresa);\n        setThirdCompany(dataIdsCandidate.terceraempresa);\n        setHiredCompany(dataIdsCandidate.empresacontratada);\n      } else {\n        console.log(\"No se encontraron datos para el estudiante solicitado.\");\n      }\n      return jsonResponse;\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  /*\r\n      Peticion para obtener los datos de un candidato segun su NOMBRE.\r\n  */\n  const SearchCandidatesDates = async studentName => {\n    try {\n      const bodyParameters = {\n        'nombre': studentName\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/getCandidatesData\", options);\n      if (!response.ok) {\n        throw new Error('Error al buscar el estudiante');\n      }\n      const jsonResponse = await response.json();\n      console.log(\"Contenido de la peticion /getCandidatesData: \" + jsonResponse);\n      // Solo si la respuesta contiene datos\n      if (jsonResponse.length > 0) {\n        const dataCandidate = jsonResponse[0]; // Accede al primer objeto del array\n\n        // Asigna los valores a las variables de estado\n        setCandidateId(dataCandidate.idcandidato);\n        setStudentId(dataCandidate.idalumno);\n        setAssignmentDate(dataCandidate.fechaasignacion);\n        setStudentDualStatus(dataCandidate.estadodualalumno);\n        setCompany1Status(dataCandidate.estadoempresa1);\n        setCompany2Status(dataCandidate.estadoempresa2);\n        setCompany3Status(dataCandidate.estadoempresa3);\n        setFirstCompany(dataCandidate.primeraempresa);\n        setSecondCompany(dataCandidate.segundaempresa);\n        setThirdCompany(dataCandidate.terceraempresa);\n        setHiredCompany(dataCandidate.empresacontratada);\n        setDualStudentEmail(dataCandidate.emaildualalumno);\n        setCompanyOpinion(dataCandidate.opinionempresa);\n        setObservations(dataCandidate.observaciones);\n        setShift(dataCandidate.turno);\n        setReceivedAttachment(dataCandidate.anexorecibido);\n        setFilledAttachment(dataCandidate.anexorellenado);\n        setCalendarStatus(dataCandidate.estadocalendario);\n        setAttachment(dataCandidate.anexo);\n        setRelationshipType(dataCandidate.tiporelacion);\n        setCno(dataCandidate.cno);\n      } else {\n        console.log(\"No se encontraron datos para el estudiante solicitado.\");\n      }\n      return jsonResponse;\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  /*\r\n      Peticion para encontrar el contenido de los atributos que contienen la id en vez del contenido.\r\n  */\n  const FoundStudentIdsData = async (studentId, studentDualStatus, company1Status, company2Status, company3Status, firstCompany, secondCompany, thirdCompany, hiredCompany) => {\n    try {\n      const bodyParameters = {\n        'idalumno': studentId,\n        'estadodualalumno': studentDualStatus,\n        'estadoempresa1': company1Status,\n        'estadoempresa2': company2Status,\n        'estadoempresa3': company3Status,\n        'primeraempresa': firstCompany,\n        'segundaempresa': secondCompany,\n        'terceraempresa': thirdCompany,\n        'empresacontratada': hiredCompany\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/getCandidatesIdData\", options);\n      if (!response.ok) {\n        throw new Error('Error al buscar ids de candidato');\n      }\n      const jsonResponse = await response.json();\n      // Solo si la respuesta contiene datos\n      console.log(\"Contenido de la peticion getCandidatesIdData: \" + jsonResponse);\n      if (jsonResponse.length > 0) {\n        const dataIdsCandidate = jsonResponse[0]; // Accede al primer objeto del array\n        // Asigna los valores a las variables de estado\n        setStudentIdName(dataIdsCandidate.idalumno);\n        setStudentDualStatusName(dataIdsCandidate.estadodualalumno);\n        setCompany1StatusName(dataIdsCandidate.estadoempresa1);\n        setCompany2StatusName(dataIdsCandidate.estadoempresa2);\n        setCompany3StatusName(dataIdsCandidate.estadoempresa3);\n        setFirstCompanyName(dataIdsCandidate.primeraempresa);\n        setSecondCompanyName(dataIdsCandidate.segundaempresa);\n        setThirdCompanyName(dataIdsCandidate.terceraempresa);\n        setHiredCompanyName(dataIdsCandidate.empresacontratada);\n      } else {\n        console.log(\"No se encontraron datos para el estudiante solicitado.\");\n      }\n      return jsonResponse;\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  // FUNCTIONS\n\n  function handleAssignmentDateChange(event) {\n    setAssignmentDate(event.target.value); // Actualiza el estado de assignmentDate\n  }\n  function handleStudentIdNameChange(event) {\n    setStudentIdName(event.target.value); // Actualiza el estado de studentIdName\n  }\n  function handleStudentDualStatusNameChange(event) {\n    setStudentDualStatusName(event.target.value); // Actualiza el estado de studentDualStatusName\n  }\n  function handleCompany1StatusNameChange(event) {\n    setCompany1StatusName(event.target.value); // Actualiza el estado de company1StatusName\n  }\n  function handleCompany2StatusNameChange(event) {\n    setCompany2StatusName(event.target.value); // Actualiza el estado de company2StatusName\n  }\n  function handleCompany3StatusNameChange(event) {\n    setCompany3StatusName(event.target.value); // Actualiza el estado de company3StatusName\n  }\n  function handleFirstCompanyNameChange(event) {\n    setFirstCompanyName(event.target.value); // Actualiza el estado de firstCompanyName\n  }\n  function handleSecondCompanyNameChange(event) {\n    setSecondCompanyName(event.target.value); // Actualiza el estado de secondCompanyName\n  }\n  function handleThirdCompanyNameChange(event) {\n    setThirdCompanyName(event.target.value); // Actualiza el estado de thirdCompanyName\n  }\n  function handleHiredCompanyNameChange(event) {\n    setHiredCompanyName(event.target.value); // Actualiza el estado de hiredCompanyName\n  }\n  function handleDualStudentEmailChange(event) {\n    setDualStudentEmail(event.target.value); // Actualiza el estado de dualStudentEmail\n  }\n  function handleCompanyOpinionChange(event) {\n    setCompanyOpinion(event.target.value); // Actualiza el estado de companyOpinion\n  }\n  function handleObservationsChange(event) {\n    setObservations(event.target.value); // Actualiza el estado de observations\n  }\n  function handleShiftChange(event) {\n    setShift(event.target.value); // Actualiza el estado de shift\n  }\n  function handleReceivedAttachmentChange(event) {\n    setReceivedAttachment(event.target.value); // Actualiza el estado de receivedAttachment\n  }\n  function handleFilledAttachmentChange(event) {\n    setFilledAttachment(event.target.value); // Actualiza el estado de filledAttachment\n  }\n  function handleCalendarStatusChange(event) {\n    setCalendarStatus(event.target.value); // Actualiza el estado de calendarStatus\n  }\n  function handleAttachmentChange(event) {\n    setAttachment(event.target.value); // Actualiza el estado de attachment\n  }\n  function handleRelationshipTypeChange(event) {\n    setRelationshipType(event.target.value); // Actualiza el estado de relationshipType\n  }\n  function handleCnoChange(event) {\n    setCno(event.target.value); // Actualiza el estado de cno\n  }\n  function handleStudentNameChange(event) {\n    setStudentName(event.target.value); // Actualiza el estado de studentName\n  }\n\n  // EJECUCIONES\n  function ButtonClickObtainCandidateData() {\n    SearchCandidatesDates(studentName);\n  }\n  function ButtonClickUpdateCandidate() {\n    UpdateCandidate();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        htmlFor: \"studentName\",\n        children: \"INTRODUCE EL NOMBRE DEL CANDIDATO QUE QUIERES MODIFICAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: studentName,\n        id: \"studentName-input\",\n        placeholder: \"NOMBRE DEL ALUMNO\",\n        onChange: handleStudentNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"updateCandidate\",\n        type: \"button\",\n        onClick: ButtonClickObtainCandidateData,\n        children: \" OBTENER DATOS DEL CANDIDATO \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"assignmentDate-input\",\n        children: \"Fecha de Asignaci\\xF3n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: assignmentDate,\n        id: \"assignmentDate-input\",\n        onChange: handleAssignmentDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"studentIdName-input\",\n        children: \"ID del Alumno:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: studentIdName,\n        id: \"studentIdName-input\",\n        onChange: handleStudentIdNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"studentDualStatusName-input\",\n        children: \"Estado Dual del Alumno:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: studentDualStatusName,\n        id: \"studentDualStatusName-input\",\n        onChange: handleStudentDualStatusNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"company1StatusName-input\",\n        children: \"Estado de la Empresa 1:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: company1StatusName,\n        id: \"company1StatusName-input\",\n        onChange: handleCompany1StatusNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"company2StatusName-input\",\n        children: \"Estado de la Empresa 2:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: company2StatusName,\n        id: \"company2StatusName-input\",\n        onChange: handleCompany2StatusNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"company3StatusName-input\",\n        children: \"Estado de la Empresa 3:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: company3StatusName,\n        id: \"company3StatusName-input\",\n        onChange: handleCompany3StatusNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstCompanyName-input\",\n        children: \"Nombre de la Primera Empresa:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: firstCompanyName,\n        id: \"firstCompanyName-input\",\n        onChange: handleFirstCompanyNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"secondCompanyName-input\",\n        children: \"Nombre de la Segunda Empresa:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: secondCompanyName,\n        id: \"secondCompanyName-input\",\n        onChange: handleSecondCompanyNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"thirdCompanyName-input\",\n        children: \"Nombre de la Tercera Empresa:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: thirdCompanyName,\n        id: \"thirdCompanyName-input\",\n        onChange: handleThirdCompanyNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"hiredCompanyName-input\",\n        children: \"Nombre de la Empresa Contratada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: hiredCompanyName,\n        id: \"hiredCompanyName-input\",\n        onChange: handleHiredCompanyNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dualStudentEmail-input\",\n        children: \"Correo Electr\\xF3nico del Alumno Dual:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: dualStudentEmail,\n        id: \"dualStudentEmail-input\",\n        onChange: handleDualStudentEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"companyOpinion-input\",\n        children: \"Opini\\xF3n de la Empresa:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: companyOpinion,\n        id: \"companyOpinion-input\",\n        onChange: handleCompanyOpinionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"observations-input\",\n        children: \"Observaciones:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: observations,\n        id: \"observations-input\",\n        onChange: handleObservationsChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"shift-input\",\n        children: \"Turno:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: shift,\n        id: \"shift-input\",\n        onChange: handleShiftChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"receivedAttachment-input\",\n        children: \"Adjunto Recibido:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: receivedAttachment,\n        id: \"receivedAttachment-input\",\n        onChange: handleReceivedAttachmentChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filledAttachment-input\",\n        children: \"Adjunto Completado:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: filledAttachment,\n        id: \"filledAttachment-input\",\n        onChange: handleFilledAttachmentChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"calendarStatus-input\",\n        children: \"Estado del Calendario:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: calendarStatus,\n        id: \"calendarStatus-input\",\n        onChange: handleCalendarStatusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"attachment-input\",\n        children: \"Adjunto:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: attachment,\n        id: \"attachment-input\",\n        onChange: handleAttachmentChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"relationshipType-input\",\n        children: \"Tipo de Relaci\\xF3n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: relationshipType,\n        id: \"relationshipType-input\",\n        onChange: handleRelationshipTypeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cno-input\",\n        children: \"CNO:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: cno,\n        id: \"cno-input\",\n        onChange: handleCnoChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchStudent\",\n        type: \"button\",\n        onClick: ButtonClickUpdateCandidate,\n        children: \" ACTUALIZAR CANDIATO \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchCandidateToUpdate, \"GNx/4EgRoof/HrwVBs6RBNEgjMM=\");\n_c = SearchCandidateToUpdate;\nvar _c;\n$RefreshReg$(_c, \"SearchCandidateToUpdate\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SearchCandidateToUpdate","_s","dataCandidate","setDataCandidate","dataIdsCandidate","setDataIdsCandidate","dataStudent","setDataStudent","candidateId","setCandidateId","studentName","setStudentName","studentId","setStudentId","assignmentDate","setAssignmentDate","studentDualStatus","setStudentDualStatus","company1Status","setCompany1Status","company2Status","setCompany2Status","company3Status","setCompany3Status","firstCompany","setFirstCompany","secondCompany","setSecondCompany","thirdCompany","setThirdCompany","hiredCompany","setHiredCompany","dualStudentEmail","setDualStudentEmail","companyOpinion","setCompanyOpinion","observations","setObservations","shift","setShift","receivedAttachment","setReceivedAttachment","filledAttachment","setFilledAttachment","calendarStatus","setCalendarStatus","attachment","setAttachment","relationshipType","setRelationshipType","cno","setCno","studentIdName","setStudentIdName","studentDualStatusName","setStudentDualStatusName","company1StatusName","setCompany1StatusName","company2StatusName","setCompany2StatusName","company3StatusName","setCompany3StatusName","firstCompanyName","setFirstCompanyName","secondCompanyName","setSecondCompanyName","thirdCompanyName","setThirdCompanyName","hiredCompanyName","setHiredCompanyName","FoundStudentIdsData","FoundStudentIdsByUserRequest","UpdateCandidate","bodyParameters","options","method","headers","body","JSON","stringify","response","fetch","ok","Error","jsonResponse","json","console","log","length","error","message","idalumno","estadodualalumno","estadoempresa1","estadoempresa2","estadoempresa3","primeraempresa","segundaempresa","terceraempresa","empresacontratada","SearchCandidatesDates","idcandidato","fechaasignacion","emaildualalumno","opinionempresa","observaciones","turno","anexorecibido","anexorellenado","estadocalendario","anexo","tiporelacion","handleAssignmentDateChange","event","target","value","handleStudentIdNameChange","handleStudentDualStatusNameChange","handleCompany1StatusNameChange","handleCompany2StatusNameChange","handleCompany3StatusNameChange","handleFirstCompanyNameChange","handleSecondCompanyNameChange","handleThirdCompanyNameChange","handleHiredCompanyNameChange","handleDualStudentEmailChange","handleCompanyOpinionChange","handleObservationsChange","handleShiftChange","handleReceivedAttachmentChange","handleFilledAttachmentChange","handleCalendarStatusChange","handleAttachmentChange","handleRelationshipTypeChange","handleCnoChange","handleStudentNameChange","ButtonClickObtainCandidateData","ButtonClickUpdateCandidate","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/reulo/OneDrive/Escritorio/ServidorFP/frontend/src/components/UpdateCandidate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles.css'; // Importa el archivo de estilos CSS global\r\n\r\n/* Como hay atributos que tienen un id y no el contenido persé, para estos campos,\r\n   habrá dos atributos, el que se muestre el contenido, y el que mantenga la id.\r\n*/\r\nfunction SearchCandidateToUpdate (){\r\n    const [dataCandidate, setDataCandidate] = useState ([]); //Este es el array que va a contener los atributos de la tabla candidatos para el alumno solicitado.\r\n    const [dataIdsCandidate, setDataIdsCandidate] = useState ([]); //Este es el array que va a contener el contenido de los campos que tienen una id encuenta del contenido.\r\n    const [dataStudent, setDataStudent] = useState ([]);  // ¿Es necesario?\r\n    const [candidateId, setCandidateId] = useState (\"\");\r\n    const [studentName, setStudentName] = useState (\"\"); //Esta variable va a guardar el nombre del alumno que quiera buscar el usuario.\r\n\r\n    // Estos son los atributos REALES, alguno se muestran y otros, los que tienen la id, no.\r\n    const [studentId, setStudentId] = useState(\"\");\r\n    const [assignmentDate, setAssignmentDate] = useState(\"\");\r\n    const [studentDualStatus, setStudentDualStatus] = useState(\"\");\r\n    const [company1Status, setCompany1Status] = useState(\"\");\r\n    const [company2Status, setCompany2Status] = useState(\"\");\r\n    const [company3Status, setCompany3Status] = useState(\"\");\r\n    const [firstCompany, setFirstCompany] = useState(\"\");\r\n    const [secondCompany, setSecondCompany] = useState(\"\");\r\n    const [thirdCompany, setThirdCompany] = useState(\"\");\r\n    const [hiredCompany, setHiredCompany] = useState(\"\");\r\n    const [dualStudentEmail, setDualStudentEmail] = useState(\"\");\r\n    const [companyOpinion, setCompanyOpinion] = useState(\"\");\r\n    const [observations, setObservations] = useState(\"\");\r\n    const [shift, setShift] = useState(\"\");\r\n    const [receivedAttachment, setReceivedAttachment] = useState(\"\");\r\n    const [filledAttachment, setFilledAttachment] = useState(\"\");\r\n    const [calendarStatus, setCalendarStatus] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [relationshipType, setRelationshipType] = useState(\"\");\r\n    const [cno, setCno] = useState(\"\");\r\n    // Estos son los atributos que se MUESTRAN al usuario\r\n    const [studentIdName, setStudentIdName] = useState(\"\");\r\n    const [studentDualStatusName, setStudentDualStatusName] = useState(\"\");\r\n    const [company1StatusName, setCompany1StatusName] = useState(\"\");\r\n    const [company2StatusName, setCompany2StatusName] = useState(\"\");\r\n    const [company3StatusName, setCompany3StatusName] = useState(\"\");\r\n    const [firstCompanyName, setFirstCompanyName] = useState(\"\");\r\n    const [secondCompanyName, setSecondCompanyName] = useState(\"\");\r\n    const [thirdCompanyName, setThirdCompanyName] = useState(\"\");\r\n    const [hiredCompanyName, setHiredCompanyName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        FoundStudentIdsData(studentId, studentDualStatus, company1Status, company2Status, company3Status, firstCompany, secondCompany, thirdCompany, hiredCompany);\r\n        FoundStudentIdsByUserRequest (studentIdName, studentDualStatusName, company1StatusName, company2StatusName, company3StatusName, firstCompanyName, secondCompanyName, thirdCompanyName, hiredCompanyName);\r\n      }, [studentId, studentDualStatus, company1Status, company2Status, company3Status, firstCompany, secondCompany, thirdCompany, hiredCompany, \r\n         studentIdName, studentDualStatusName, company1StatusName, company2StatusName, company3StatusName, firstCompanyName, secondCompanyName, thirdCompanyName, hiredCompanyName]); \r\n    \r\n      \r\n\r\n    /*\r\n        Peticion para actualizar los registros de un estudiante.\r\n    */\r\n        const UpdateCandidate = async (studentId, assignmentDate, studentDualStatus, company1Status, company2Status, company3Status, \r\n                                        firstCompany, secondCompany, thirdCompany, hiredCompany, dualStudentEmail, companyOpinion, \r\n                                        observations, shift, receivedAttachment, filledAttachment, calendarStatus, attachment, \r\n                                        relationshipType, cno, candidateId\r\n        ) => {\r\n            try {\r\n                const bodyParameters = {\r\n                    'idalumno': studentId,\r\n                    'fechaasignacion': assignmentDate,\r\n                    'estadodualalumno': studentDualStatus,\r\n                    'estadoempresa1': company1Status,\r\n                    'estadoempresa2': company2Status,\r\n                    'estadoempresa3': company3Status,\r\n                    'primeraempresa': firstCompany,\r\n                    'segundaempresa': secondCompany,\r\n                    'terceraempresa': thirdCompany,\r\n                    'empresacontratada': hiredCompany,\r\n                    'emaildualalumno': dualStudentEmail,\r\n                    'opinionempresa': companyOpinion,\r\n                    'observaciones': observations,\r\n                    'turno': shift,\r\n                    'anexorecibido': receivedAttachment,\r\n                    'anexorellenado': filledAttachment,\r\n                    'estadocalendario': calendarStatus,\r\n                    'anexo': attachment,\r\n                    'tiporelacion': relationshipType,\r\n                    'cno': cno,\r\n                    'idcandidato': candidateId\r\n                }\r\n        \r\n                const options = {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(bodyParameters)\r\n                }\r\n        \r\n                const response = await fetch(\"/updateCandidate\", options);\r\n        \r\n                if (!response.ok) {\r\n                    throw new Error('Error al buscar ids de candidato');\r\n                }\r\n        \r\n                const jsonResponse = await response.json();\r\n                // Solo si la respuesta contiene datos\r\n                console.log(\"Contenido de la peticion getCandidatesIdFromData: \" + jsonResponse);\r\n                if (jsonResponse.length > 0) {\r\n        \r\n                } else {\r\n                    console.log(\"No se encontraron datos para el estudiante solicitado.\");\r\n                }\r\n        \r\n                return jsonResponse;\r\n            } catch (error) {\r\n                console.error('Error:', error.message);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    /*\r\n        Peticion para obtener las ids de cada campo segun el contenido introducido por el usuario\r\n    */\r\n      const FoundStudentIdsByUserRequest = async (studentIdName, studentDualStatusName, company1StatusName, company2StatusName, company3StatusName, firstCompanyName, secondCompanyName, thirdCompanyName, hiredCompanyName) => {\r\n        try {\r\n            const bodyParameters = {\r\n                'idalumno': studentIdName,\r\n                'estadodualalumno': studentDualStatusName,\r\n                'estadoempresa1': company1StatusName,\r\n                'estadoempresa2': company2StatusName,\r\n                'estadoempresa3': company3StatusName,\r\n                'primeraempresa': firstCompanyName,\r\n                'segundaempresa': secondCompanyName,\r\n                'terceraempresa': thirdCompanyName,\r\n                'empresacontratada': hiredCompanyName,\r\n            }\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(bodyParameters)\r\n            }\r\n    \r\n            const response = await fetch(\"/getCandidatesIdFromData\", options);\r\n    \r\n            if (!response.ok) {\r\n                throw new Error('Error al buscar ids de candidato');\r\n            }\r\n    \r\n            const jsonResponse = await response.json();\r\n            // Solo si la respuesta contiene datos\r\n            console.log(\"Contenido de la peticion getCandidatesIdFromData: \" + jsonResponse);\r\n            if (jsonResponse.length > 0) {\r\n                const dataIdsCandidate = jsonResponse[0]; // Accede al primer objeto del array\r\n                // Asigna los valores a las variables de estado\r\n                setStudentId(dataIdsCandidate.idalumno);\r\n                setStudentDualStatus(dataIdsCandidate.estadodualalumno);\r\n                setCompany1Status(dataIdsCandidate.estadoempresa1);\r\n                setCompany2Status(dataIdsCandidate.estadoempresa2);\r\n                setCompany3Status(dataIdsCandidate.estadoempresa3);\r\n                setFirstCompany(dataIdsCandidate.primeraempresa);\r\n                setSecondCompany(dataIdsCandidate.segundaempresa);\r\n                setThirdCompany(dataIdsCandidate.terceraempresa);\r\n                setHiredCompany(dataIdsCandidate.empresacontratada);\r\n\r\n            } else {\r\n                console.log(\"No se encontraron datos para el estudiante solicitado.\");\r\n            }\r\n    \r\n            return jsonResponse;\r\n        } catch (error) {\r\n            console.error('Error:', error.message);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /*\r\n        Peticion para obtener los datos de un candidato segun su NOMBRE.\r\n    */\r\n    const SearchCandidatesDates = async (studentName) => {\r\n        try {\r\n            const bodyParameters = {\r\n                'nombre': studentName\r\n            }\r\n    \r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(bodyParameters)\r\n            }\r\n    \r\n            const response = await fetch(\"/getCandidatesData\", options);\r\n    \r\n            if (!response.ok) {\r\n                throw new Error('Error al buscar el estudiante');\r\n            }\r\n    \r\n            const jsonResponse = await response.json();\r\n            console.log(\"Contenido de la peticion /getCandidatesData: \" + jsonResponse);\r\n            // Solo si la respuesta contiene datos\r\n            if (jsonResponse.length > 0) {\r\n                const dataCandidate = jsonResponse[0]; // Accede al primer objeto del array\r\n    \r\n                // Asigna los valores a las variables de estado\r\n                setCandidateId(dataCandidate.idcandidato);\r\n                setStudentId(dataCandidate.idalumno);\r\n                setAssignmentDate(dataCandidate.fechaasignacion);\r\n                setStudentDualStatus(dataCandidate.estadodualalumno);\r\n                setCompany1Status(dataCandidate.estadoempresa1);\r\n                setCompany2Status(dataCandidate.estadoempresa2);\r\n                setCompany3Status(dataCandidate.estadoempresa3);\r\n                setFirstCompany(dataCandidate.primeraempresa);\r\n                setSecondCompany(dataCandidate.segundaempresa);\r\n                setThirdCompany(dataCandidate.terceraempresa);\r\n                setHiredCompany(dataCandidate.empresacontratada);\r\n                setDualStudentEmail(dataCandidate.emaildualalumno);\r\n                setCompanyOpinion(dataCandidate.opinionempresa);\r\n                setObservations(dataCandidate.observaciones);\r\n                setShift(dataCandidate.turno);\r\n                setReceivedAttachment(dataCandidate.anexorecibido);\r\n                setFilledAttachment(dataCandidate.anexorellenado);\r\n                setCalendarStatus(dataCandidate.estadocalendario);\r\n                setAttachment(dataCandidate.anexo);\r\n                setRelationshipType(dataCandidate.tiporelacion);\r\n                setCno(dataCandidate.cno);\r\n\r\n            } else {\r\n                console.log(\"No se encontraron datos para el estudiante solicitado.\");\r\n            }\r\n    \r\n            return jsonResponse;\r\n        } catch (error) {\r\n            console.error('Error:', error.message);\r\n        }\r\n    }\r\n\r\n    /*\r\n        Peticion para encontrar el contenido de los atributos que contienen la id en vez del contenido.\r\n    */\r\n    const FoundStudentIdsData = async (studentId, studentDualStatus, company1Status, company2Status, company3Status, firstCompany, secondCompany, thirdCompany, hiredCompany) => {\r\n        try {\r\n            const bodyParameters = {\r\n                'idalumno': studentId,\r\n                'estadodualalumno': studentDualStatus,\r\n                'estadoempresa1': company1Status,\r\n                'estadoempresa2': company2Status,\r\n                'estadoempresa3': company3Status,\r\n                'primeraempresa': firstCompany,\r\n                'segundaempresa': secondCompany,\r\n                'terceraempresa': thirdCompany,\r\n                'empresacontratada': hiredCompany,\r\n            }\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(bodyParameters)\r\n            }\r\n    \r\n            const response = await fetch(\"/getCandidatesIdData\", options);\r\n    \r\n            if (!response.ok) {\r\n                throw new Error('Error al buscar ids de candidato');\r\n            }\r\n    \r\n            const jsonResponse = await response.json();\r\n            // Solo si la respuesta contiene datos\r\n            console.log(\"Contenido de la peticion getCandidatesIdData: \" + jsonResponse);\r\n            if (jsonResponse.length > 0) {\r\n                const dataIdsCandidate = jsonResponse[0]; // Accede al primer objeto del array\r\n                // Asigna los valores a las variables de estado\r\n                setStudentIdName(dataIdsCandidate.idalumno);\r\n                setStudentDualStatusName(dataIdsCandidate.estadodualalumno);\r\n                setCompany1StatusName(dataIdsCandidate.estadoempresa1);\r\n                setCompany2StatusName(dataIdsCandidate.estadoempresa2);\r\n                setCompany3StatusName(dataIdsCandidate.estadoempresa3);\r\n                setFirstCompanyName(dataIdsCandidate.primeraempresa);\r\n                setSecondCompanyName(dataIdsCandidate.segundaempresa);\r\n                setThirdCompanyName(dataIdsCandidate.terceraempresa);\r\n                setHiredCompanyName(dataIdsCandidate.empresacontratada);\r\n\r\n            } else {\r\n                console.log(\"No se encontraron datos para el estudiante solicitado.\");\r\n            }\r\n    \r\n            return jsonResponse;\r\n        } catch (error) {\r\n            console.error('Error:', error.message);\r\n        }\r\n    }\r\n\r\n    // FUNCTIONS\r\n\r\n    function handleAssignmentDateChange(event) {\r\n        setAssignmentDate(event.target.value); // Actualiza el estado de assignmentDate\r\n    }\r\n    \r\n    function handleStudentIdNameChange(event) {\r\n    setStudentIdName(event.target.value); // Actualiza el estado de studentIdName\r\n    }\r\n    \r\n    function handleStudentDualStatusNameChange(event) {\r\n    setStudentDualStatusName(event.target.value); // Actualiza el estado de studentDualStatusName\r\n    }\r\n    \r\n    function handleCompany1StatusNameChange(event) {\r\n    setCompany1StatusName(event.target.value); // Actualiza el estado de company1StatusName\r\n    }\r\n    \r\n    function handleCompany2StatusNameChange(event) {\r\n    setCompany2StatusName(event.target.value); // Actualiza el estado de company2StatusName\r\n    }\r\n    \r\n    function handleCompany3StatusNameChange(event) {\r\n    setCompany3StatusName(event.target.value); // Actualiza el estado de company3StatusName\r\n    }\r\n    \r\n    function handleFirstCompanyNameChange(event) {\r\n    setFirstCompanyName(event.target.value); // Actualiza el estado de firstCompanyName\r\n    }\r\n    \r\n    function handleSecondCompanyNameChange(event) {\r\n    setSecondCompanyName(event.target.value); // Actualiza el estado de secondCompanyName\r\n    }\r\n    \r\n    function handleThirdCompanyNameChange(event) {\r\n    setThirdCompanyName(event.target.value); // Actualiza el estado de thirdCompanyName\r\n    }\r\n    \r\n    function handleHiredCompanyNameChange(event) {\r\n    setHiredCompanyName(event.target.value); // Actualiza el estado de hiredCompanyName\r\n    }\r\n    \r\n    function handleDualStudentEmailChange(event) {\r\n    setDualStudentEmail(event.target.value); // Actualiza el estado de dualStudentEmail\r\n    }\r\n    \r\n    function handleCompanyOpinionChange(event) {\r\n    setCompanyOpinion(event.target.value); // Actualiza el estado de companyOpinion\r\n    }\r\n    \r\n    function handleObservationsChange(event) {\r\n    setObservations(event.target.value); // Actualiza el estado de observations\r\n    }\r\n    \r\n    function handleShiftChange(event) {\r\n    setShift(event.target.value); // Actualiza el estado de shift\r\n    }\r\n    \r\n    function handleReceivedAttachmentChange(event) {\r\n    setReceivedAttachment(event.target.value); // Actualiza el estado de receivedAttachment\r\n    }\r\n    \r\n    function handleFilledAttachmentChange(event) {\r\n    setFilledAttachment(event.target.value); // Actualiza el estado de filledAttachment\r\n    }\r\n    \r\n    function handleCalendarStatusChange(event) {\r\n    setCalendarStatus(event.target.value); // Actualiza el estado de calendarStatus\r\n    }\r\n    \r\n    function handleAttachmentChange(event) {\r\n    setAttachment(event.target.value); // Actualiza el estado de attachment\r\n    }\r\n    \r\n    function handleRelationshipTypeChange(event) {\r\n    setRelationshipType(event.target.value); // Actualiza el estado de relationshipType\r\n    }\r\n    \r\n    function handleCnoChange(event) {\r\n    setCno(event.target.value); // Actualiza el estado de cno\r\n\r\n    }\r\n\r\n    function handleStudentNameChange(event) {\r\n        setStudentName(event.target.value); // Actualiza el estado de studentName\r\n    }\r\n\r\n      // EJECUCIONES\r\n      function ButtonClickObtainCandidateData (){\r\n            SearchCandidatesDates (studentName);\r\n      }\r\n\r\n      function ButtonClickUpdateCandidate (){\r\n            UpdateCandidate ();\r\n      }\r\n\r\n      return (\r\n        <div>\r\n            <div className=\"input-field\">\r\n                <h4 htmlFor=\"studentName\">INTRODUCE EL NOMBRE DEL CANDIDATO QUE QUIERES MODIFICAR</h4>\r\n                <input type=\"text\" value={studentName} id=\"studentName-input\"  placeholder={\"NOMBRE DEL ALUMNO\"}  onChange={handleStudentNameChange} />\r\n                <button  className=\"updateCandidate\"  type=\"button\"  onClick={ ButtonClickObtainCandidateData}> OBTENER DATOS DEL CANDIDATO </button>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"assignmentDate-input\">Fecha de Asignación:</label>\r\n                <input type=\"text\" value={assignmentDate} id=\"assignmentDate-input\" onChange={handleAssignmentDateChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"studentIdName-input\">ID del Alumno:</label>\r\n                <input type=\"text\" value={studentIdName} id=\"studentIdName-input\" onChange={handleStudentIdNameChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"studentDualStatusName-input\">Estado Dual del Alumno:</label>\r\n                <input type=\"text\" value={studentDualStatusName} id=\"studentDualStatusName-input\" onChange={handleStudentDualStatusNameChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"company1StatusName-input\">Estado de la Empresa 1:</label>\r\n                <input type=\"text\" value={company1StatusName} id=\"company1StatusName-input\" onChange={handleCompany1StatusNameChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"company2StatusName-input\">Estado de la Empresa 2:</label>\r\n                <input type=\"text\" value={company2StatusName} id=\"company2StatusName-input\" onChange={handleCompany2StatusNameChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"company3StatusName-input\">Estado de la Empresa 3:</label>\r\n                <input type=\"text\" value={company3StatusName} id=\"company3StatusName-input\" onChange={handleCompany3StatusNameChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"firstCompanyName-input\">Nombre de la Primera Empresa:</label>\r\n                <input type=\"text\" value={firstCompanyName} id=\"firstCompanyName-input\" onChange={handleFirstCompanyNameChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"secondCompanyName-input\">Nombre de la Segunda Empresa:</label>\r\n                <input type=\"text\" value={secondCompanyName} id=\"secondCompanyName-input\" onChange={handleSecondCompanyNameChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"thirdCompanyName-input\">Nombre de la Tercera Empresa:</label>\r\n                <input type=\"text\" value={thirdCompanyName} id=\"thirdCompanyName-input\" onChange={handleThirdCompanyNameChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"hiredCompanyName-input\">Nombre de la Empresa Contratada:</label>\r\n                <input type=\"text\" value={hiredCompanyName} id=\"hiredCompanyName-input\" onChange={handleHiredCompanyNameChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"dualStudentEmail-input\">Correo Electrónico del Alumno Dual:</label>\r\n                <input type=\"text\" value={dualStudentEmail} id=\"dualStudentEmail-input\" onChange={handleDualStudentEmailChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"companyOpinion-input\">Opinión de la Empresa:</label>\r\n                <input type=\"text\" value={companyOpinion} id=\"companyOpinion-input\" onChange={handleCompanyOpinionChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"observations-input\">Observaciones:</label>\r\n                <input type=\"text\" value={observations} id=\"observations-input\" onChange={handleObservationsChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"shift-input\">Turno:</label>\r\n                <input type=\"text\" value={shift} id=\"shift-input\" onChange={handleShiftChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"receivedAttachment-input\">Adjunto Recibido:</label>\r\n                <input type=\"text\" value={receivedAttachment} id=\"receivedAttachment-input\" onChange={handleReceivedAttachmentChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"filledAttachment-input\">Adjunto Completado:</label>\r\n                <input type=\"text\" value={filledAttachment} id=\"filledAttachment-input\" onChange={handleFilledAttachmentChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"calendarStatus-input\">Estado del Calendario:</label>\r\n                <input type=\"text\" value={calendarStatus} id=\"calendarStatus-input\" onChange={handleCalendarStatusChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"attachment-input\">Adjunto:</label>\r\n                <input type=\"text\" value={attachment} id=\"attachment-input\" onChange={handleAttachmentChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"relationshipType-input\">Tipo de Relación:</label>\r\n                <input type=\"text\" value={relationshipType} id=\"relationshipType-input\" onChange={handleRelationshipTypeChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"cno-input\">CNO:</label>\r\n                <input type=\"text\" value={cno} id=\"cno-input\" onChange={handleCnoChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <button className=\"searchStudent\" type=\"button\" onClick={ButtonClickUpdateCandidate}> ACTUALIZAR CANDIATO </button>\r\n            </div>\r\n        </div>\r\n      );\r\n\r\n\r\n    \r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}