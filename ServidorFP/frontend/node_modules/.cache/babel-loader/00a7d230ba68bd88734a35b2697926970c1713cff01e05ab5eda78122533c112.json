{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reulo\\\\OneDrive\\\\Escritorio\\\\ServidorFP\\\\frontend\\\\src\\\\components\\\\GetCandidate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GetCandidate() {\n  _s();\n  const location = useLocation();\n  const {\n    candidateId2\n  } = location.state || {};\n  const [candidateData, setCandidateData] = useState([]);\n  const [candidateDataPlusAttributes, setCandidateDataPlusAttributes] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const getCandidateDataByIdResponse = await fetchCandidateDataById(candidateId2);\n        const getCandidateDataByIdPlusAttributesResponse = await fetchCandidateDataByIdPlusAttributes(candidateId2);\n        setCandidateData(getCandidateDataByIdResponse);\n        setCandidateDataPlusAttributes(getCandidateDataByIdPlusAttributesResponse);\n      } catch (error) {\n        console.error('Error:', error.message);\n      }\n    };\n    if (candidateId2) {\n      fetchData();\n    }\n  }, [candidateId2]);\n  const fetchCandidateDataById = async id => {\n    try {\n      const bodyParameters = {\n        'idcandidato': id\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/getCandidateDataById\", options);\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      const jsonResponse = await response.json();\n      return jsonResponse;\n    } catch (error) {\n      console.error('Error:', error.message);\n      return [];\n    }\n  };\n  const fetchCandidateDataByIdPlusAttributes = async id => {\n    try {\n      const bodyParameters = {\n        'idcandidato': id\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/getCandidateDataByIdPlusAtributtes\", options);\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      const jsonResponse = await response.json();\n      return jsonResponse;\n    } catch (error) {\n      console.error('Error:', error.message);\n      return [];\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Candidate Data:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: candidateData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"candidate-card\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"candidate-info-list\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nombre:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), \" \", item.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Candidate Data with Attributes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: candidateDataPlusAttributes.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"candidate-card\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"candidate-info-list\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nombre:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), \" \", item.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(GetCandidate, \"Eno5PnWBY3uzkGlqpYROGhfdBJ0=\", false, function () {\n  return [useLocation];\n});\n_c = GetCandidate;\nexport default GetCandidate;\nvar _c;\n$RefreshReg$(_c, \"GetCandidate\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","GetCandidate","_s","location","candidateId2","state","candidateData","setCandidateData","candidateDataPlusAttributes","setCandidateDataPlusAttributes","fetchData","getCandidateDataByIdResponse","fetchCandidateDataById","getCandidateDataByIdPlusAttributesResponse","fetchCandidateDataByIdPlusAttributes","error","console","message","id","bodyParameters","options","method","headers","body","JSON","stringify","response","fetch","ok","Error","jsonResponse","json","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","index","nombre","_c","$RefreshReg$"],"sources":["C:/Users/reulo/OneDrive/Escritorio/ServidorFP/frontend/src/components/GetCandidate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction GetCandidate() {\r\n  const location = useLocation();\r\n  const { candidateId2 } = location.state || {};\r\n  const [candidateData, setCandidateData] = useState([]);\r\n  const [candidateDataPlusAttributes, setCandidateDataPlusAttributes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const getCandidateDataByIdResponse = await fetchCandidateDataById(candidateId2);\r\n        const getCandidateDataByIdPlusAttributesResponse = await fetchCandidateDataByIdPlusAttributes(candidateId2);\r\n\r\n        setCandidateData(getCandidateDataByIdResponse);\r\n        setCandidateDataPlusAttributes(getCandidateDataByIdPlusAttributesResponse);\r\n      } catch (error) {\r\n        console.error('Error:', error.message);\r\n      }\r\n    };\r\n\r\n    if (candidateId2) {\r\n      fetchData();\r\n    }\r\n  }, [candidateId2]);\r\n\r\n  const fetchCandidateDataById = async (id) => {\r\n    try {\r\n      const bodyParameters = {\r\n        'idcandidato': id\r\n      };\r\n      const options = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(bodyParameters)\r\n      };\r\n      const response = await fetch(\"/getCandidateDataById\", options);\r\n      if (!response.ok) {\r\n        throw new Error('Error en la solicitud');\r\n      }\r\n      const jsonResponse = await response.json();\r\n      return jsonResponse;\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const fetchCandidateDataByIdPlusAttributes = async (id) => {\r\n    try {\r\n      const bodyParameters = {\r\n        'idcandidato': id\r\n      };\r\n      const options = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(bodyParameters)\r\n      };\r\n      const response = await fetch(\"/getCandidateDataByIdPlusAtributtes\", options);\r\n      if (!response.ok) {\r\n        throw new Error('Error en la solicitud');\r\n      }\r\n      const jsonResponse = await response.json();\r\n      return jsonResponse;\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>Candidate Data:</h4>\r\n      <div className=\"results-container\">\r\n        {candidateData.map((item, index) => (\r\n          <div key={index} className=\"candidate-card\">\r\n            <ul className=\"candidate-info-list\">\r\n              <li><strong>Nombre:</strong> {item.nombre}</li>\r\n              {/* Agrega aquí más elementos según lo necesites */}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <h4>Candidate Data with Attributes:</h4>\r\n      <div className=\"results-container\">\r\n        {candidateDataPlusAttributes.map((item, index) => (\r\n          <div key={index} className=\"candidate-card\">\r\n            <ul className=\"candidate-info-list\">\r\n              <li><strong>Nombre:</strong> {item.nombre}</li>\r\n              {/* Agrega aquí más elementos según lo necesites */}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GetCandidate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}