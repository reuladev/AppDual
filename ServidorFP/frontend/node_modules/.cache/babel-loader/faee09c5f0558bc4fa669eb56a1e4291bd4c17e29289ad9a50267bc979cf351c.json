{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reulo\\\\OneDrive\\\\Escritorio\\\\ServidorFP\\\\frontend\\\\src\\\\components\\\\SearchStudent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles.css'; // Importa el archivo de estilos CSS global\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchStudentComponent() {\n  _s();\n  const [name, setName] = useState(\"\"); // Va a almacenar el nombre que nos de el usuario\n  const [studentData, setStudentData] = useState([]); // Array que va a contener los datos del usuario/usuario coincidentes con el nombre\n  const [mostrarMas, setMostrarMas] = useState(false); //Variable boolean con valor falso, se usa para permitir mostrar o no, los datos del estudiante.\n\n  useEffect(() => {\n    GetStudentDataByName(name);\n  }, [name]);\n  /*\r\n     Peticion que envia el nombre del usuario y recoge todos los datos de la tabla del usuario solicitado.\r\n  */\n  const GetStudentDataByName = async name => {\n    try {\n      const bodyParameters = {\n        'nombre': name\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/getStudentDataByName\", options);\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      const jsonResponse = await response.json();\n      setStudentData(jsonResponse);\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n  // Permite alterar el valor de nombre en tiempo real por el usuario.\n  const HandleNameChange = event => {\n    setName(event.target.value);\n  };\n  // Boton que ejecuta la funcion que permite mostrar los datos del usuario/usuarios.\n  // Si se pulsa el boton, deja de tener valor falso y muestra los datos.\n  const ButtonClickSearchStudent = () => {\n    setMostrarMas(!mostrarMas);\n  };\n  //Renderizado.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"BUSCADOR DE ALUMNOS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      id: \"name-input\",\n      onChange: HandleNameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"searchStudent\",\n      type: \"button\",\n      onClick: ButtonClickSearchStudent,\n      children: \"BUSCAR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), mostrarMas && studentData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: studentData.map((student, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"student-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: student.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"student-info-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nombre:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), \" \", student.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Sexo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this), \" \", student.sexo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"DNI:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), \" \", student.dni]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nacionalidad:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this), \" \", student.nacionalidad]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Fecha de nacimiento:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this), \" \", student.fechanacimiento]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchStudentComponent, \"5aWHDeKYO/4OpyfNhfRQyPLGDCI=\");\n_c = SearchStudentComponent;\nexport default SearchStudentComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchStudentComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SearchStudentComponent","_s","name","setName","studentData","setStudentData","mostrarMas","setMostrarMas","GetStudentDataByName","bodyParameters","options","method","headers","body","JSON","stringify","response","fetch","ok","Error","jsonResponse","json","error","console","message","HandleNameChange","event","target","value","ButtonClickSearchStudent","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","className","onClick","length","map","student","index","nombre","sexo","dni","nacionalidad","fechanacimiento","_c","$RefreshReg$"],"sources":["C:/Users/reulo/OneDrive/Escritorio/ServidorFP/frontend/src/components/SearchStudent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles.css'; // Importa el archivo de estilos CSS global\r\n\r\nfunction SearchStudentComponent() {\r\n  const [name, setName] = useState(\"\"); // Va a almacenar el nombre que nos de el usuario\r\n  const [studentData, setStudentData] = useState([]); // Array que va a contener los datos del usuario/usuario coincidentes con el nombre\r\n  const [mostrarMas, setMostrarMas] = useState(false); //Variable boolean con valor falso, se usa para permitir mostrar o no, los datos del estudiante.\r\n\r\n  useEffect(() => {\r\n      GetStudentDataByName(name); \r\n  }, [name]);\r\n  /*\r\n     Peticion que envia el nombre del usuario y recoge todos los datos de la tabla del usuario solicitado.\r\n  */\r\n  const GetStudentDataByName = async (name) => {\r\n    try {\r\n      const bodyParameters = {\r\n        'nombre': name };\r\n      const options = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(bodyParameters)\r\n      };\r\n      const response = await fetch(\"/getStudentDataByName\", options);\r\n      if (!response.ok) {\r\n        throw new Error('Error en la solicitud'); \r\n      }\r\n      const jsonResponse = await response.json();\r\n      setStudentData(jsonResponse);\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n    }\r\n  };\r\n  // Permite alterar el valor de nombre en tiempo real por el usuario.\r\n  const HandleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  // Boton que ejecuta la funcion que permite mostrar los datos del usuario/usuarios.\r\n  // Si se pulsa el boton, deja de tener valor falso y muestra los datos.\r\n  const ButtonClickSearchStudent = () => {\r\n    setMostrarMas(!mostrarMas);\r\n  };\r\n  //Renderizado.\r\n  return (\r\n    <div>\r\n      <h4>BUSCADOR DE ALUMNOS</h4>\r\n      <input type=\"text\"  value={name} id=\"name-input\" onChange={HandleNameChange} />\r\n      <button className=\"searchStudent\" type=\"button\" onClick={ButtonClickSearchStudent}>BUSCAR</button>\r\n\r\n      {mostrarMas && studentData.length > 0 && (\r\n        <div>\r\n          {studentData.map((student, index) => (\r\n            <div key={index} className=\"student-card\">\r\n              <h2>{student.nombre}</h2>\r\n              <ul className=\"student-info-list\">\r\n                <li><strong>Nombre:</strong> {student.nombre}</li>\r\n                <li><strong>Sexo:</strong> {student.sexo}</li>\r\n                <li><strong>DNI:</strong> {student.dni}</li>\r\n                <li><strong>Nacionalidad:</strong> {student.nacionalidad}</li>\r\n                <li><strong>Fecha de nacimiento:</strong> {student.fechanacimiento}</li>\r\n              </ul>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchStudentComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}