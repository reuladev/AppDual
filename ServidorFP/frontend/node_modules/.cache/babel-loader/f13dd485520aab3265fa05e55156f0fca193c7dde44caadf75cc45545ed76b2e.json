{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reulo\\\\git\\\\AppDual\\\\ServidorFP\\\\frontend\\\\src\\\\components\\\\StudentEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport '../styles.css';\nimport { format } from 'date-fns'; // --> Para poder formatear la fecha DD-MM-AAAA\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GetStudentEdit() {\n  _s();\n  /*\r\n  Recibimos de anteriores componentes los arrays con los datos de alumno elegido\r\n  por el usuario, asi como su idalumno y sus preferencias.\r\n  Nota: La idea de preferencias era la de obtener todas en un solo array como el \r\n        resto de atributos de otras tablas.\r\n        El problema es que el atributo que contiene el valor del tipo de preferencia\r\n        se aplica en 3 campos diferentes en la tabla gf_alumnosfct PERO obviamente\r\n        el nombre del atributo es el mismo, por lo que al enviarlo en formato JSON\r\n        no es posible tener 3 atributos que se llaman igual, lo único que he podido\r\n        hacer es realizar 3 querrys diferentes para obtener cada preferencia por se\r\n        parado.\r\n  */\n\n  //ATRIBUTOS OBTENIDOS DE GETSTUDENT\n  const location = useLocation();\n  const {\n    studentData\n  } = location.state || {};\n  const {\n    preference1\n  } = location.state || {};\n  const {\n    preference2\n  } = location.state || {};\n  const {\n    preference3\n  } = location.state || {};\n  const {\n    studentId2,\n    setStudentId2\n  } = location.state || {};\n  const {\n    idiomsData,\n    setIdiomsData\n  } = location.state || {};\n  const {\n    docsData,\n    setDocsData\n  } = location.state || {};\n  const {\n    calificationsData,\n    setCalificationsData\n  } = location.state || {};\n  const [studentId, setStudentId] = useState(\"\");\n  const [preference1Name, setPreference1Name] = useState(preference1[0].preferencia);\n  const [preference2Name, setPreference2Name] = useState(preference2[0].preferencia);\n  const [preference3Name, setPreference3Name] = useState(preference3[0].preferencia);\n  const handlePreference1NameChange = event => {\n    setPreference1Name(event.target.value);\n  };\n  const handlePreference2NameChange = event => {\n    setPreference2Name(event.target.value);\n  };\n  const handlePreference3NameChange = event => {\n    setPreference3Name(event.target.value);\n  };\n  const [preference1Id, setPreference1Id] = useState(\"\");\n  const [preference2Id, setPreference2Id] = useState(\"\");\n  const [preference3Id, setPreference3Id] = useState(\"\");\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      await StudentPreferences1Requests(preference1Name);\n      await StudentPreferences2Requests(preference2Name);\n      await StudentPreferences3Requests(preference3Name);\n    };\n    fetchPreferences();\n  }, [preference1Name, preference2Name, preference3Name]);\n\n  /* Aqui introduzco los datos enviados del anterior componente al nuevo porque el\r\n     formato de como se evian los atributos cambia y hay que extraerlos para poder \r\n     usarlos\r\n  */\n  const [idioms, setIdioms] = useState(idiomsData || []);\n  const [docs, setDocs] = useState(docsData || []);\n\n  //ATRIBUTOS DE IDIOM\n  const [idiomId, setIdiomId] = useState(\"\");\n  const [studentIdiom, setStudentIdiom] = useState(idioms[0].idioma); // = idioms.idioma\n  const [degree, setDegree] = useState(\"\");\n\n  //ATRIBUTOS DE DOCS\n  const [docId, setDocsId] = useState(\"\");\n  const [studentDoc, setStudentDoc] = useState(\"\");\n  const [URL, setURL] = useState(\"\");\n  idioms.forEach(idiom => {\n    console.log(idiom); // Aquí puedes acceder a las propiedades de cada objeto\n  });\n  docs.forEach(idiom => {\n    console.log(idiom); // Aquí puedes acceder a las propiedades de cada objeto\n  });\n\n  // Evento onChange para grado de dominio del idioma\n  const handleStudentIdiomChange = (event, idiomIndex) => {\n    const newIdiomsData = [...idioms];\n    newIdiomsData[idiomIndex].idioma = event.target.value;\n    setIdioms(newIdiomsData);\n  };\n\n  // Evento onChange para el grado\n  const handleDegreeChange = (event, idiomIndex) => {\n    const newIdiomsData = [...idioms];\n    newIdiomsData[idiomIndex].titulo = event.target.value;\n    setIdioms(newIdiomsData);\n  };\n\n  // Evento onChange para los documentos del estudiante\n  const handleStudentDocChange = (event, docIndex) => {\n    const newDocsData = [...docs];\n    newDocsData[docIndex].docalum = event.target.value;\n    setDocs(newDocsData);\n  };\n\n  // Evento onChange para la URL\n  const handleURLChange = (event, docIndex) => {\n    const newDocsData = [...docs];\n    newDocsData[docIndex].url = event.target.value;\n    setDocs(newDocsData);\n  };\n  useEffect(() => {\n    if (studentIdiom) {\n      GetIdiomIdByIdiom(studentIdiom);\n    }\n  }, [studentIdiom]);\n  const GetIdiomIdByIdiom = async studentIdiom => {\n    try {\n      const response = await fetch(`/getIdiomIdByIdiom?idioma=${encodeURIComponent(studentIdiom)}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      const jsonResponse = await response.json();\n      setIdiomId(jsonResponse.ididioma); // Ajusta esto según el formato de tu respuesta JSON\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  //ATRIBUTOS DE ALUMNO\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [DNI, setDNI] = useState(\"\");\n  const [birthdate, setBirthdate] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [curriculumStatus, setCurriculumStatus] = useState(\"\");\n  const [admissionStatus, setAdmissionStatus] = useState(\"\");\n  const [studiesEmail, setStudiesEmail] = useState(\"\");\n  const [nationality, setNationality] = useState(\"\");\n  const [drivingLicense, setDrivingLicense] = useState(\"\");\n  const [availability, setAvailability] = useState(\"\");\n  const [SSnumber, setSSNumber] = useState(\"\");\n  const [employmentSituation, setEmploymentSituation] = useState(\"\");\n  const [legalGuardianName, setLegalGuardianName] = useState(\"\");\n  const [speciality, setSpeciality] = useState(\"\");\n  const [studentTelephone, setStudentTelephone] = useState(\"\");\n  const [familyTelephone, setFamilyTelephone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [observations, setObservations] = useState(\"\");\n  const [FCTmonth, setFCTMonth] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [CP, setCP] = useState(\"\");\n  const [locacion, setLocacion] = useState(\"\");\n\n  //ATRIBUTOS DE  CALIFICATION\n  const [averageGrade, setAverageGrade] = useState(\"\");\n  const [idiomGrade, setIdiomGrade] = useState(\"\");\n  const [maturityGrade, setMaturityGrade] = useState(\"\");\n  const [competentGrade, setCompetentGrade] = useState(\"\");\n  const [failuresNumber, setFailuresNumber] = useState(\"\");\n  const [failuresGrade, setFailuresGrade] = useState(\"\");\n  const [globalGrade, setGlobalGrade] = useState(\"\");\n  const [observations2, setObservations2] = useState(\"\");\n\n  /*\r\n  Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n  que coincidan en su nombre con lo solicitado por el usuario.\r\n  */\n  const StudentPreferences1Requests = async preference1Name => {\n    try {\n      const bodyParameters = {\n        'preferencia1': preference1Name\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/studentPreferences1Requests\", options);\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      const jsonResponse = await response.json();\n      setPreference1Id(jsonResponse[0].idpreferencia);\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  /*\r\n   Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n   que coincidan en su nombre con lo solicitado por el usuario.\r\n   */\n  const StudentPreferences2Requests = async preference2Name => {\n    try {\n      const bodyParameters = {\n        'preferencia2': preference2Name\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/studentPreferences2Requests\", options);\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      const jsonResponse = await response.json();\n      setPreference2Id(jsonResponse[0].idpreferencia);\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  /*\r\n   Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n   que coincidan en su nombre con lo solicitado por el usuario.\r\n   */\n  const StudentPreferences3Requests = async preference3Name => {\n    try {\n      const bodyParameters = {\n        'preferencia3': preference3Name\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/studentPreferences3Requests\", options);\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      const jsonResponse = await response.json();\n      setPreference3Id(jsonResponse[0].idpreferencia);\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  // ------------------------------------------- UP DATES ! ---------------------\n\n  /*\r\n   Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n   que coincidan en su nombre con lo solicitado por el usuario.\r\n   */\n  const UpdateStudent = async (name, gender, DNI, birthdate, preference1Id, preference2Id, preference3Id, date, curriculumStatus, admissionStatus, studiesEmail, nationality, drivingLicense, availability, SSnumber, employmentSituation, legalGuardianName, speciality, studentTelephone, familyTelephone, email, observations, FCTmonth, adress, CP, locacion, studentId) => {\n    try {\n      const bodyParameters = {\n        'nombre': name,\n        'sexo': gender,\n        'dni': DNI,\n        'fechanacimiento': birthdate,\n        'preferencia1': preference1Id,\n        'preferencia2': preference2Id,\n        'preferencia3': preference3Id,\n        'fecha': date,\n        'estadocurriculum': curriculumStatus,\n        'estadoadmision': admissionStatus,\n        'emailinstituto': studiesEmail,\n        'nacionalidad': nationality,\n        'carnetconducir': drivingLicense,\n        'disponibilidad': availability,\n        'numeroSS': SSnumber,\n        'situacionlaboral': employmentSituation,\n        'nombretutorlegal': legalGuardianName,\n        'especialidad': speciality,\n        'telalumno': studentTelephone,\n        'telfamilia': familyTelephone,\n        'email': email,\n        'observaciones': observations,\n        'mesFCT': FCTmonth,\n        'domicilio': adress,\n        'cp': CP,\n        'localidad': locacion,\n        'idalumno': studentId\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/updateStudent\", options);\n      if (!response.ok) {\n        throw new Error('Error adding the student');\n      }\n      const jsonResponse = await response.json();\n      console.log(JSON.stringify(jsonResponse));\n      return jsonResponse;\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  /*\r\n  \r\n  */\n  const UpdateStudent_Calification = async (studentId, averageGrade, idiomGrade, maturityGrade, competentGrade, failuresNumber, failuresGrade, globalGrade, observations2) => {\n    try {\n      const bodyParameters = {\n        'idalumno': studentId,\n        'notamedia': averageGrade,\n        'notaidioma': idiomGrade,\n        'notamadurez': maturityGrade,\n        'notacompetencia': competentGrade,\n        'numfaltas': failuresNumber,\n        'notafaltas': failuresGrade,\n        'notaglobal': globalGrade,\n        'observaciones2': observations2\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/updateStudent_Calification\", options);\n      if (!response.ok) {\n        throw new Error('Error adding the student');\n      }\n      const jsonResponse = await response.json();\n      return jsonResponse;\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  /* \r\n    PRÓXIMANENTE\r\n  */\n  const UpdateStudent_Idiom = async (studentId, idiomId, degree) => {\n    try {\n      const bodyParameters = {\n        'idalumno': studentId,\n        'ididioma': idiomId,\n        'titulo': degree\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/updateStudent_Idiom\", options);\n      if (!response.ok) {\n        throw new Error('Error adding the student');\n      }\n      const jsonResponse = await response.json();\n      console.log(JSON.stringify(jsonResponse));\n      return jsonResponse;\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n  /* \r\n      PRÓXIMANENTE\r\n  */\n  const UpdateStudent_Doc = async (studentId, studentDoc, URL, docId) => {\n    try {\n      const bodyParameters = {\n        'docalum': studentDoc,\n        'url': URL,\n        'idalumno': studentId,\n        'iddocalumno': docId\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/updateStudent_Doc\", options);\n      if (!response.ok) {\n        throw new Error('Error adding the student');\n      }\n      const jsonResponse = await response.json();\n      console.log(JSON.stringify(jsonResponse));\n      return jsonResponse;\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  /*\r\n    Actualizamos datos si existen, primero verificamos si hay datos \r\n    y luego extraemos del array el contenido para cada atributo.\r\n    Nota: Por algun motivo, si existe un valor 0, no va a coger el \r\n          contenido haciendolo como con el resto, encuenta hay que \r\n          extraelo antes, meterlo en una constante y settear la \r\n          constante.\r\n  */\n  useEffect(() => {\n    if (studentData.length > 0) {\n      const item = studentData[0];\n      const estadocurriculum = studentData[0].estadocurriculum;\n      const estadoadmision = studentData[0].estadoadmision;\n      const disponibilidad = studentData[0].disponibilidad;\n      console.log(\"TESTIGOS: \", item);\n      setName(item.nombre || '');\n      setGender(item.sexo || '');\n      setDNI(item.dni || '');\n      setBirthdate(item.fechanacimiento || '');\n      setDate(item.fecha || '');\n      setCurriculumStatus(estadocurriculum);\n      setAdmissionStatus(estadoadmision);\n      setStudiesEmail(item.emailinstituto || '');\n      setNationality(item.nacionalidad || '');\n      setDrivingLicense(item.carnetconducir || '');\n      setAvailability(disponibilidad);\n      setSSNumber(item.numeroSS || '');\n      setEmploymentSituation(item.situacionlaboral || '');\n      setLegalGuardianName(item.nombretutorlegal || '');\n      setSpeciality(item.especialidad || '');\n      setStudentTelephone(item.telalumno || '');\n      setFamilyTelephone(item.telfamilia || '');\n      setEmail(item.email || '');\n      setObservations(item.observaciones || '');\n      setFCTMonth(item.mesFCT || '');\n      setAddress(item.domicilio || '');\n      setCP(item.cp || '');\n      setLocacion(item.localidad || '');\n    }\n  }, [studentData]);\n\n  /*\r\n    Actualizamos datos si existen, primero verificamos si hay datos \r\n    y luego extraemos del array el contenido para cada atributo.\r\n  */\n  useEffect(() => {\n    if (calificationsData.length > 0) {\n      const item = calificationsData[0];\n      const notafaltas = calificationsData[0].notafaltas;\n      setAverageGrade(item.notamedia || '');\n      setIdiomGrade(item.notaidioma || '');\n      setMaturityGrade(item.notamadurez || '');\n      setCompetentGrade(item.notacompetencia || '');\n      setFailuresNumber(item.numfaltas || '');\n      setFailuresGrade(notafaltas);\n      setGlobalGrade(item.notaglobal || '');\n      setObservations2(item.observaciones || '');\n    }\n  }, [calificationsData]);\n\n  /*\r\n    Al pulsar el boton de editar el usuario, lo redirije al componente\r\n    studentEdit para poder editar cada campo.\r\n    Tambien envia a este todos los datos necesarios para poder editarlos.\r\n  */\n  const ButtonClickSaveStudent = async () => {\n    // Iterar sobre el array idioms\n    for (let i = 0; i < idioms.length; i++) {\n      const idiom = idioms[i];\n      const {\n        idalumno,\n        ididioma,\n        titulo\n      } = idiom; // Desestructura los atributos del objeto idiom\n      await UpdateStudent_Idiom(idalumno, ididioma, titulo);\n    }\n\n    // Iterar sobre el array docs\n    for (let i = 0; i < docs.length; i++) {\n      const doc = docs[i];\n      const {\n        idalumno,\n        docalum,\n        url,\n        iddocalumno\n      } = doc; // Desestructura los atributos del objeto doc\n      await UpdateStudent_Doc(idalumno, docalum, url, iddocalumno);\n    }\n    // Actualizaciones de datos principales\n    await UpdateStudent(name, gender, DNI, birthdate, preference1Id, preference2Id, preference3Id, date, curriculumStatus, admissionStatus, studiesEmail, nationality, drivingLicense, availability, SSnumber, employmentSituation, legalGuardianName, speciality, studentTelephone, familyTelephone, email, observations, FCTmonth, address, CP, locacion, studentId);\n    await UpdateStudent_Calification(studentId, averageGrade, idiomGrade, maturityGrade, competentGrade, failuresNumber, failuresGrade, globalGrade, observations2);\n  };\n\n  //Renderizamos\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-card\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"student-info-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Preferencia 1:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: preference1Name,\n            onChange: handlePreference1NameChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Preferencia 2:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: preference2Name,\n            onChange: handlePreference2NameChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Preferencia 3:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: preference3Name,\n            onChange: handlePreference3NameChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Nombre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Sexo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: gender,\n            onChange: e => setGender(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"DNI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: DNI,\n            onChange: e => setDNI(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Nacionalidad:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: nationality,\n            onChange: e => setNationality(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fecha de nacimiento:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: birthdate,\n            onChange: e => setBirthdate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fecha registro de alumno:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: date,\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Estado Curriculum:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: curriculumStatus,\n            onChange: e => setCurriculumStatus(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Estado Admisi\\xF3n:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: admissionStatus,\n            onChange: e => setAdmissionStatus(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email Instituto:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: studiesEmail,\n            onChange: e => setStudiesEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email personal:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tel\\xE9fono Alumno:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            value: studentTelephone,\n            onChange: e => setStudentTelephone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tel\\xE9fono Familia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            value: familyTelephone,\n            onChange: e => setFamilyTelephone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Carnet de Conducir:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: drivingLicense,\n            onChange: e => setDrivingLicense(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Disponibilidad:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: availability,\n            onChange: e => setAvailability(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"N\\xFAmero SS:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: SSnumber,\n            onChange: e => setSSNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Situaci\\xF3n Laboral:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: employmentSituation,\n            onChange: e => setEmploymentSituation(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Mes FCT:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: FCTmonth,\n            onChange: e => setFCTMonth(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Domicilio:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: address,\n            onChange: e => setAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"C\\xF3digo Postal:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: CP,\n            onChange: e => setCP(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Localidad:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: locacion,\n            onChange: e => setLocacion(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Especialidad:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: speciality,\n            onChange: e => setSpeciality(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Nombre Tutor Legal:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: legalGuardianName,\n            onChange: e => setLegalGuardianName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Observaciones:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: observations,\n            onChange: e => setObservations(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nota Media:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: averageGrade,\n              onChange: e => setAverageGrade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nota Idioma:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: idiomGrade,\n              onChange: e => setIdiomGrade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nota Madurez:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: maturityGrade,\n              onChange: e => setMaturityGrade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nota Competencia:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: competentGrade,\n              onChange: e => setCompetentGrade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"N\\xFAmero de faltas:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: failuresNumber,\n              onChange: e => setFailuresNumber(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nota Faltas:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: failuresGrade,\n              onChange: e => setFailuresGrade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nota Global:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: globalGrade,\n              onChange: e => setGlobalGrade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Observaciones 2:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: observations2,\n              onChange: e => setObservations2(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"DOCUMENTOS:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 23\n          }, this), docs.map((doc, docIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Documento:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: doc.docalum,\n                onChange: e => handleStudentDocChange(e, docIndex)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"URL:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: doc.url,\n                onChange: e => handleURLChange(e, docIndex)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 27\n            }, this)]\n          }, docIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"IDIOMAS:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 23\n          }, this), idioms.map((idiom, idiomIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Idioma:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: idiom.idioma,\n                onChange: e => handleStudentIdiomChange(e, idiomIndex)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"T\\xEDtulo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: idiom.titulo,\n                onChange: e => handleDegreeChange(e, idiomIndex)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 27\n            }, this)]\n          }, idiomIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"saveButton\",\n          type: \"button\",\n          onClick: ButtonClickSaveStudent,\n          children: \"GUARDAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 507,\n    columnNumber: 9\n  }, this);\n}\n_s(GetStudentEdit, \"gRyLAjRp9kgqeo6dVqk8M+ORAJA=\", false, function () {\n  return [useLocation];\n});\n_c = GetStudentEdit;\nexport default GetStudentEdit;\nvar _c;\n$RefreshReg$(_c, \"GetStudentEdit\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","format","jsxDEV","_jsxDEV","GetStudentEdit","_s","location","studentData","state","preference1","preference2","preference3","studentId2","setStudentId2","idiomsData","setIdiomsData","docsData","setDocsData","calificationsData","setCalificationsData","studentId","setStudentId","preference1Name","setPreference1Name","preferencia","preference2Name","setPreference2Name","preference3Name","setPreference3Name","handlePreference1NameChange","event","target","value","handlePreference2NameChange","handlePreference3NameChange","preference1Id","setPreference1Id","preference2Id","setPreference2Id","preference3Id","setPreference3Id","fetchPreferences","StudentPreferences1Requests","StudentPreferences2Requests","StudentPreferences3Requests","idioms","setIdioms","docs","setDocs","idiomId","setIdiomId","studentIdiom","setStudentIdiom","idioma","degree","setDegree","docId","setDocsId","studentDoc","setStudentDoc","URL","setURL","forEach","idiom","console","log","handleStudentIdiomChange","idiomIndex","newIdiomsData","handleDegreeChange","titulo","handleStudentDocChange","docIndex","newDocsData","docalum","handleURLChange","url","GetIdiomIdByIdiom","response","fetch","encodeURIComponent","method","headers","ok","Error","jsonResponse","json","ididioma","error","message","name","setName","gender","setGender","DNI","setDNI","birthdate","setBirthdate","date","setDate","curriculumStatus","setCurriculumStatus","admissionStatus","setAdmissionStatus","studiesEmail","setStudiesEmail","nationality","setNationality","drivingLicense","setDrivingLicense","availability","setAvailability","SSnumber","setSSNumber","employmentSituation","setEmploymentSituation","legalGuardianName","setLegalGuardianName","speciality","setSpeciality","studentTelephone","setStudentTelephone","familyTelephone","setFamilyTelephone","email","setEmail","observations","setObservations","FCTmonth","setFCTMonth","address","setAddress","CP","setCP","locacion","setLocacion","averageGrade","setAverageGrade","idiomGrade","setIdiomGrade","maturityGrade","setMaturityGrade","competentGrade","setCompetentGrade","failuresNumber","setFailuresNumber","failuresGrade","setFailuresGrade","globalGrade","setGlobalGrade","observations2","setObservations2","bodyParameters","options","body","JSON","stringify","idpreferencia","UpdateStudent","adress","UpdateStudent_Calification","UpdateStudent_Idiom","UpdateStudent_Doc","length","item","estadocurriculum","estadoadmision","disponibilidad","nombre","sexo","dni","fechanacimiento","fecha","emailinstituto","nacionalidad","carnetconducir","numeroSS","situacionlaboral","nombretutorlegal","especialidad","telalumno","telfamilia","observaciones","mesFCT","domicilio","cp","localidad","notafaltas","notamedia","notaidioma","notamadurez","notacompetencia","numfaltas","notaglobal","ButtonClickSaveStudent","i","idalumno","doc","iddocalumno","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/reulo/git/AppDual/ServidorFP/frontend/src/components/StudentEdit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport '../styles.css';\r\nimport { format } from 'date-fns'; // --> Para poder formatear la fecha DD-MM-AAAA\r\n\r\nfunction GetStudentEdit() {\r\n    /*\r\n    Recibimos de anteriores componentes los arrays con los datos de alumno elegido\r\n    por el usuario, asi como su idalumno y sus preferencias.\r\n    Nota: La idea de preferencias era la de obtener todas en un solo array como el \r\n          resto de atributos de otras tablas.\r\n          El problema es que el atributo que contiene el valor del tipo de preferencia\r\n          se aplica en 3 campos diferentes en la tabla gf_alumnosfct PERO obviamente\r\n          el nombre del atributo es el mismo, por lo que al enviarlo en formato JSON\r\n          no es posible tener 3 atributos que se llaman igual, lo único que he podido\r\n          hacer es realizar 3 querrys diferentes para obtener cada preferencia por se\r\n          parado.\r\n    */\r\n\r\n    //ATRIBUTOS OBTENIDOS DE GETSTUDENT\r\n    const location = useLocation();\r\n    const { studentData } = location.state || {};\r\n    const { preference1} = location.state || {};\r\n    const { preference2} = location.state || {};\r\n    const { preference3} = location.state || {};\r\n    const { studentId2, setStudentId2 } = location.state || {};\r\n    const { idiomsData, setIdiomsData} = location.state || {};\r\n    const { docsData, setDocsData} = location.state || {};\r\n    const { calificationsData, setCalificationsData} = location.state || {};\r\n\r\n    const [studentId, setStudentId] = useState(\"\");\r\n    const [preference1Name, setPreference1Name] = useState(preference1[0].preferencia);\r\n    const [preference2Name, setPreference2Name] = useState(preference2[0].preferencia);\r\n    const [preference3Name, setPreference3Name] = useState(preference3[0].preferencia);\r\n\r\n    const handlePreference1NameChange = (event) => {\r\n      setPreference1Name(event.target.value);\r\n    };\r\n    \r\n    const handlePreference2NameChange = (event) => {\r\n      setPreference2Name(event.target.value);\r\n    };\r\n    \r\n    const handlePreference3NameChange = (event) => {\r\n      setPreference3Name(event.target.value);\r\n    };\r\n\r\n    const [preference1Id, setPreference1Id] = useState(\"\");\r\n    const [preference2Id, setPreference2Id] = useState(\"\");\r\n    const [preference3Id, setPreference3Id] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n      const fetchPreferences = async () => {\r\n        await StudentPreferences1Requests(preference1Name);\r\n        await StudentPreferences2Requests(preference2Name);\r\n        await StudentPreferences3Requests(preference3Name);\r\n      };\r\n    \r\n      fetchPreferences();\r\n    }, [preference1Name, preference2Name, preference3Name]);\r\n\r\n    /* Aqui introduzco los datos enviados del anterior componente al nuevo porque el\r\n       formato de como se evian los atributos cambia y hay que extraerlos para poder \r\n       usarlos\r\n    */\r\n    const [idioms, setIdioms] = useState(idiomsData || []);\r\n    const [docs, setDocs] = useState(docsData || []);\r\n\r\n    //ATRIBUTOS DE IDIOM\r\n    const [idiomId, setIdiomId] = useState(\"\");\r\n    const [studentIdiom, setStudentIdiom] = useState(idioms[0].idioma); // = idioms.idioma\r\n    const [degree, setDegree] = useState(\"\");\r\n\r\n    //ATRIBUTOS DE DOCS\r\n    const [docId, setDocsId] = useState(\"\");\r\n    const [studentDoc, setStudentDoc] = useState(\"\");\r\n    const [URL, setURL] = useState(\"\");\r\n\r\n    idioms.forEach(idiom => {\r\n      console.log(idiom); // Aquí puedes acceder a las propiedades de cada objeto\r\n    });\r\n\r\n    docs.forEach(idiom => {\r\n      console.log(idiom); // Aquí puedes acceder a las propiedades de cada objeto\r\n    });\r\n\r\n    \r\n\r\n\r\n    // Evento onChange para grado de dominio del idioma\r\n    const handleStudentIdiomChange = (event, idiomIndex) => {\r\n      const newIdiomsData = [...idioms];\r\n      newIdiomsData[idiomIndex].idioma = event.target.value;\r\n      setIdioms(newIdiomsData);\r\n    };\r\n\r\n    // Evento onChange para el grado\r\n    const handleDegreeChange = (event, idiomIndex) => {\r\n      const newIdiomsData = [...idioms];\r\n      newIdiomsData[idiomIndex].titulo = event.target.value;\r\n      setIdioms(newIdiomsData);\r\n    };\r\n\r\n    // Evento onChange para los documentos del estudiante\r\n    const handleStudentDocChange = (event, docIndex) => {\r\n      const newDocsData = [...docs];\r\n      newDocsData[docIndex].docalum = event.target.value;\r\n      setDocs(newDocsData);\r\n    };\r\n\r\n    // Evento onChange para la URL\r\n    const handleURLChange = (event, docIndex) => {\r\n      const newDocsData = [...docs];\r\n      newDocsData[docIndex].url = event.target.value;\r\n      setDocs(newDocsData);\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      if (studentIdiom) {\r\n        GetIdiomIdByIdiom(studentIdiom);\r\n      }\r\n    }, [studentIdiom]);\r\n  \r\n    const GetIdiomIdByIdiom = async (studentIdiom) => {\r\n      try {\r\n        const response = await fetch(`/getIdiomIdByIdiom?idioma=${encodeURIComponent(studentIdiom)}`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Error en la solicitud');\r\n        }\r\n        const jsonResponse = await response.json();\r\n        setIdiomId(jsonResponse.ididioma); // Ajusta esto según el formato de tu respuesta JSON\r\n      } catch (error) {\r\n        console.error('Error:', error.message);\r\n      }\r\n    };\r\n\r\n\r\n    //ATRIBUTOS DE ALUMNO\r\n    const [name, setName] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n    const [DNI, setDNI] = useState(\"\");\r\n    const [birthdate, setBirthdate] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [curriculumStatus, setCurriculumStatus] = useState(\"\");\r\n    const [admissionStatus, setAdmissionStatus] = useState(\"\");\r\n    const [studiesEmail, setStudiesEmail] = useState(\"\");\r\n    const [nationality, setNationality] = useState(\"\");\r\n    const [drivingLicense, setDrivingLicense] = useState(\"\");\r\n    const [availability, setAvailability] = useState(\"\");\r\n    const [SSnumber, setSSNumber] = useState(\"\");\r\n    const [employmentSituation, setEmploymentSituation] = useState(\"\");\r\n    const [legalGuardianName, setLegalGuardianName] = useState(\"\");\r\n    const [speciality, setSpeciality] = useState(\"\");\r\n    const [studentTelephone, setStudentTelephone] = useState(\"\");\r\n    const [familyTelephone, setFamilyTelephone] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [observations, setObservations] = useState(\"\");\r\n    const [FCTmonth, setFCTMonth] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [CP, setCP] = useState(\"\");\r\n    const [locacion, setLocacion] = useState(\"\");\r\n\r\n    //ATRIBUTOS DE  CALIFICATION\r\n    const [averageGrade, setAverageGrade] = useState(\"\");\r\n    const [idiomGrade, setIdiomGrade] = useState(\"\");\r\n    const [maturityGrade, setMaturityGrade] = useState(\"\");\r\n    const [competentGrade, setCompetentGrade] = useState(\"\");\r\n    const [failuresNumber, setFailuresNumber] = useState(\"\");\r\n    const [failuresGrade, setFailuresGrade] = useState(\"\");\r\n    const [globalGrade, setGlobalGrade] = useState(\"\");\r\n    const [observations2, setObservations2] = useState(\"\");\r\n    \r\n    /*\r\n    Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n    que coincidan en su nombre con lo solicitado por el usuario.\r\n    */\r\n    const StudentPreferences1Requests = async (preference1Name) => {\r\n      try {\r\n          const bodyParameters = {\r\n          'preferencia1': preference1Name\r\n          };\r\n          const options = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(bodyParameters)\r\n          };\r\n          const response = await fetch(\"/studentPreferences1Requests\", options);\r\n          if (!response.ok) {\r\n          throw new Error('Error en la solicitud');\r\n          }\r\n          const jsonResponse = await response.json();\r\n          setPreference1Id (jsonResponse[0].idpreferencia);\r\n      } catch (error) {\r\n          console.error('Error:', error.message);\r\n      }\r\n   };\r\n\r\n   /*\r\n    Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n    que coincidan en su nombre con lo solicitado por el usuario.\r\n    */\r\n    const StudentPreferences2Requests = async (preference2Name) => {\r\n      try {\r\n          const bodyParameters = {\r\n          'preferencia2': preference2Name\r\n          };\r\n          const options = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(bodyParameters)\r\n          };\r\n          const response = await fetch(\"/studentPreferences2Requests\", options);\r\n          if (!response.ok) {\r\n          throw new Error('Error en la solicitud');\r\n          }\r\n          const jsonResponse = await response.json();\r\n          setPreference2Id (jsonResponse[0].idpreferencia);\r\n      } catch (error) {\r\n          console.error('Error:', error.message);\r\n      }\r\n   };\r\n\r\n   /*\r\n    Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n    que coincidan en su nombre con lo solicitado por el usuario.\r\n    */\r\n    const StudentPreferences3Requests = async (preference3Name) => {\r\n      try {\r\n          const bodyParameters = {\r\n          'preferencia3': preference3Name\r\n          };\r\n          const options = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(bodyParameters)\r\n          };\r\n          const response = await fetch(\"/studentPreferences3Requests\", options);\r\n          if (!response.ok) {\r\n          throw new Error('Error en la solicitud');\r\n          }\r\n          const jsonResponse = await response.json();\r\n          setPreference3Id (jsonResponse[0].idpreferencia);\r\n      } catch (error) {\r\n          console.error('Error:', error.message);\r\n      }\r\n   };\r\n\r\n\r\n   // ------------------------------------------- UP DATES ! ---------------------\r\n\r\n   /*\r\n    Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n    que coincidan en su nombre con lo solicitado por el usuario.\r\n    */\r\n    const UpdateStudent = async (\r\n      name, gender, DNI, birthdate, preference1Id, preference2Id, preference3Id, date, curriculumStatus, admissionStatus, studiesEmail,\r\n      nationality, drivingLicense, availability, SSnumber, employmentSituation, legalGuardianName,\r\n      speciality, studentTelephone, familyTelephone, email, observations, FCTmonth, adress, CP, locacion, studentId\r\n    ) => {\r\n      try {\r\n        const bodyParameters = {\r\n          'nombre': name,\r\n          'sexo': gender,\r\n          'dni': DNI,\r\n          'fechanacimiento': birthdate,\r\n          'preferencia1': preference1Id,\r\n          'preferencia2':preference2Id,\r\n          'preferencia3': preference3Id,\r\n          'fecha': date,\r\n          'estadocurriculum': curriculumStatus,\r\n          'estadoadmision': admissionStatus,\r\n          'emailinstituto': studiesEmail,\r\n          'nacionalidad': nationality,\r\n          'carnetconducir': drivingLicense,\r\n          'disponibilidad': availability,\r\n          'numeroSS': SSnumber,\r\n          'situacionlaboral': employmentSituation,\r\n          'nombretutorlegal': legalGuardianName,\r\n          'especialidad': speciality,\r\n          'telalumno': studentTelephone,\r\n          'telfamilia': familyTelephone,\r\n          'email': email,\r\n          'observaciones': observations,\r\n          'mesFCT': FCTmonth,\r\n          'domicilio': adress,\r\n          'cp': CP,\r\n          'localidad': locacion,\r\n          'idalumno': studentId\r\n        };\r\n\r\n        const options = {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(bodyParameters)\r\n        };\r\n\r\n        const response = await fetch(\"/updateStudent\", options);\r\n        if (!response.ok) {\r\n          throw new Error('Error adding the student');\r\n        }\r\n        const jsonResponse = await response.json();\r\n        console.log(JSON.stringify(jsonResponse));\r\n        return jsonResponse;\r\n      } catch (error) {\r\n        console.error('Error:', error.message);\r\n      }\r\n    };\r\n\r\n      /*\r\n      \r\n      */\r\n    const UpdateStudent_Calification = async (studentId, averageGrade, idiomGrade, maturityGrade, competentGrade, failuresNumber, failuresGrade, globalGrade, observations2) => {\r\n      try {\r\n        const bodyParameters = {\r\n          'idalumno': studentId,\r\n          'notamedia': averageGrade,\r\n          'notaidioma': idiomGrade,\r\n          'notamadurez': maturityGrade,\r\n          'notacompetencia': competentGrade,\r\n          'numfaltas': failuresNumber,\r\n          'notafaltas': failuresGrade,\r\n          'notaglobal': globalGrade,\r\n          'observaciones2': observations2\r\n        }\r\n  \r\n        const options = {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(bodyParameters)\r\n        }\r\n        \r\n        const response = await fetch(\"/updateStudent_Calification\", options);\r\n        if (!response.ok) {\r\n          throw new Error('Error adding the student');\r\n        }\r\n        const jsonResponse = await response.json();\r\n        return jsonResponse;\r\n      } catch (error) {\r\n        console.error('Error:', error.message);\r\n      }\r\n    }\r\n\r\n    /* \r\n      PRÓXIMANENTE\r\n  */\r\n  const UpdateStudent_Idiom = async (studentId, idiomId, degree) => {\r\n    try {\r\n      const bodyParameters = {\r\n        'idalumno': studentId,\r\n        'ididioma': idiomId,\r\n        'titulo': degree\r\n      }\r\n\r\n      const options = {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(bodyParameters)\r\n      }\r\n      \r\n      const response = await fetch(\"/updateStudent_Idiom\", options);\r\n      if (!response.ok) {\r\n        throw new Error('Error adding the student');\r\n      }\r\n      const jsonResponse = await response.json();\r\n      console.log(JSON.stringify(jsonResponse));\r\n      return jsonResponse;\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n    }\r\n  }\r\n  /* \r\n      PRÓXIMANENTE\r\n  */\r\n  const UpdateStudent_Doc = async (studentId, studentDoc, URL, docId) => {\r\n    try {\r\n      const bodyParameters = {\r\n        'docalum': studentDoc,\r\n        'url': URL,\r\n        'idalumno': studentId,\r\n        'iddocalumno':docId\r\n      }\r\n\r\n      const options = {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(bodyParameters)\r\n      }\r\n      \r\n      const response = await fetch(\"/updateStudent_Doc\", options);\r\n      if (!response.ok) {\r\n        throw new Error('Error adding the student');\r\n      }\r\n      const jsonResponse = await response.json();\r\n      console.log(JSON.stringify(jsonResponse));\r\n      return jsonResponse;\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n    }\r\n  }\r\n\r\n\r\n    /*\r\n      Actualizamos datos si existen, primero verificamos si hay datos \r\n      y luego extraemos del array el contenido para cada atributo.\r\n      Nota: Por algun motivo, si existe un valor 0, no va a coger el \r\n            contenido haciendolo como con el resto, encuenta hay que \r\n            extraelo antes, meterlo en una constante y settear la \r\n            constante.\r\n    */\r\n    useEffect(() => {\r\n      if (studentData.length > 0) {\r\n        const item = studentData[0];\r\n        const estadocurriculum = studentData[0].estadocurriculum;\r\n        const estadoadmision = studentData[0].estadoadmision;\r\n        const disponibilidad = studentData[0].disponibilidad;\r\n        console.log(\"TESTIGOS: \",item);\r\n        setName(item.nombre || '');\r\n        setGender(item.sexo || '');\r\n        setDNI(item.dni || '');\r\n        setBirthdate(item.fechanacimiento || '');\r\n        setDate(item.fecha || '');\r\n        setCurriculumStatus(estadocurriculum);\r\n        setAdmissionStatus(estadoadmision);\r\n        setStudiesEmail(item.emailinstituto|| '');\r\n        setNationality(item.nacionalidad || '');\r\n        setDrivingLicense(item.carnetconducir || '');\r\n        setAvailability(disponibilidad);\r\n        setSSNumber(item.numeroSS || '');\r\n        setEmploymentSituation(item.situacionlaboral || '');\r\n        setLegalGuardianName(item.nombretutorlegal || '');\r\n        setSpeciality(item.especialidad || '');\r\n        setStudentTelephone(item.telalumno|| '');\r\n        setFamilyTelephone(item.telfamilia || '');\r\n        setEmail(item.email || '');\r\n        setObservations(item.observaciones || '');\r\n        setFCTMonth(item.mesFCT || '');\r\n        setAddress(item.domicilio || '');\r\n        setCP(item.cp || '');\r\n        setLocacion(item.localidad || '');\r\n      }\r\n    }, [studentData]);\r\n\r\n      /*\r\n        Actualizamos datos si existen, primero verificamos si hay datos \r\n        y luego extraemos del array el contenido para cada atributo.\r\n      */\r\n    useEffect(() => {\r\n      if (calificationsData.length > 0) {\r\n          const item = calificationsData[0];\r\n          const notafaltas = calificationsData[0].notafaltas;\r\n          setAverageGrade(item.notamedia || '');\r\n          setIdiomGrade(item.notaidioma|| '');\r\n          setMaturityGrade(item.notamadurez || '');\r\n          setCompetentGrade(item.notacompetencia || '');\r\n          setFailuresNumber(item.numfaltas || '');\r\n          setFailuresGrade(notafaltas);\r\n          setGlobalGrade(item.notaglobal || '');\r\n          setObservations2(item.observaciones || '');\r\n      }\r\n    }, [calificationsData]);\r\n\r\n    /*\r\n      Al pulsar el boton de editar el usuario, lo redirije al componente\r\n      studentEdit para poder editar cada campo.\r\n      Tambien envia a este todos los datos necesarios para poder editarlos.\r\n    */\r\n      const ButtonClickSaveStudent = async () => {\r\n          // Iterar sobre el array idioms\r\n        for (let i = 0; i < idioms.length; i++) {\r\n          const idiom = idioms[i];\r\n          const { idalumno, ididioma, titulo } = idiom; // Desestructura los atributos del objeto idiom\r\n          await UpdateStudent_Idiom(idalumno, ididioma, titulo);\r\n        }\r\n\r\n        // Iterar sobre el array docs\r\n        for (let i = 0; i < docs.length; i++) {\r\n            const doc = docs[i];\r\n            const { idalumno, docalum, url, iddocalumno } = doc; // Desestructura los atributos del objeto doc\r\n            await UpdateStudent_Doc(idalumno, docalum, url, iddocalumno);\r\n        }\r\n        // Actualizaciones de datos principales\r\n        await UpdateStudent(\r\n            name, gender, DNI, birthdate, preference1Id, preference2Id, preference3Id, date, curriculumStatus, admissionStatus, studiesEmail,\r\n            nationality, drivingLicense, availability, SSnumber, employmentSituation, legalGuardianName,\r\n            speciality, studentTelephone, familyTelephone, email, observations, FCTmonth, address, CP, locacion, studentId\r\n        );\r\n        await UpdateStudent_Calification(\r\n            studentId, averageGrade, idiomGrade, maturityGrade, competentGrade, failuresNumber, failuresGrade, globalGrade, observations2\r\n        );\r\n    }\r\n\r\n  //Renderizamos\r\n  return (\r\n        <div>\r\n            <div className=\"student-card\">\r\n                    <ul className=\"student-info-list\">\r\n                    <li>\r\n                      <strong>Preferencia 1:</strong>\r\n                      <input type=\"text\" value={preference1Name} onChange={handlePreference1NameChange} />\r\n                    </li>\r\n\r\n                    <li>\r\n                      <strong>Preferencia 2:</strong>\r\n                      <input type=\"text\" value={preference2Name} onChange={handlePreference2NameChange} />\r\n                    </li>\r\n\r\n                    <li>\r\n                      <strong>Preferencia 3:</strong>\r\n                      <input type=\"text\" value={preference3Name} onChange={handlePreference3NameChange} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Nombre:</strong>\r\n                        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Sexo:</strong>\r\n                        <input type=\"text\" value={gender} onChange={(e) => setGender(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>DNI:</strong>\r\n                        <input type=\"text\" value={DNI} onChange={(e) => setDNI(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Nacionalidad:</strong>\r\n                        <input type=\"text\" value={nationality} onChange={(e) => setNationality(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Fecha de nacimiento:</strong>\r\n                        <input type=\"text\" value={birthdate} onChange={(e) => setBirthdate(e.target.value)} />\r\n                    </li>\r\n                    \r\n                    <li>\r\n                        <strong>Fecha registro de alumno:</strong>\r\n                        <input type=\"text\" value={date} onChange={(e) => setDate(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Estado Curriculum:</strong>\r\n                        <input type=\"text\" value={curriculumStatus} onChange={(e) => setCurriculumStatus(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Estado Admisión:</strong>\r\n                        <input type=\"text\" value={admissionStatus} onChange={(e) => setAdmissionStatus(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Email Instituto:</strong>\r\n                        <input type=\"email\" value={studiesEmail} onChange={(e) => setStudiesEmail(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Email personal:</strong>\r\n                        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Teléfono Alumno:</strong>\r\n                        <input type=\"tel\" value={studentTelephone} onChange={(e) => setStudentTelephone(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Teléfono Familia:</strong>\r\n                        <input type=\"tel\" value={familyTelephone} onChange={(e) => setFamilyTelephone(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Carnet de Conducir:</strong>\r\n                        <input type=\"text\" value={drivingLicense} onChange={(e) => setDrivingLicense(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Disponibilidad:</strong>\r\n                        <input type=\"text\" value={availability} onChange={(e) => setAvailability(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Número SS:</strong>\r\n                        <input type=\"text\" value={SSnumber} onChange={(e) => setSSNumber(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Situación Laboral:</strong>\r\n                        <input type=\"text\" value={employmentSituation} onChange={(e) => setEmploymentSituation(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Mes FCT:</strong>\r\n                        <input type=\"text\" value={FCTmonth} onChange={(e) => setFCTMonth(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Domicilio:</strong>\r\n                        <input type=\"text\" value={address} onChange={(e) => setAddress(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Código Postal:</strong>\r\n                        <input type=\"text\" value={CP} onChange={(e) => setCP(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Localidad:</strong>\r\n                        <input type=\"text\" value={locacion} onChange={(e) => setLocacion(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Especialidad:</strong>\r\n                        <input type=\"text\" value={speciality} onChange={(e) => setSpeciality(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Nombre Tutor Legal:</strong>\r\n                        <input type=\"text\" value={legalGuardianName} onChange={(e) => setLegalGuardianName(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Observaciones:</strong>\r\n                        <input type=\"text\" value={observations} onChange={(e) => setObservations(e.target.value)} />\r\n                    </li>\r\n                    <div className=\"student-card\">\r\n                        <li>\r\n                            <strong>Nota Media:</strong>\r\n                            <input type=\"text\" value={averageGrade} onChange={(e) => setAverageGrade(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <strong>Nota Idioma:</strong>\r\n                            <input type=\"text\" value={idiomGrade} onChange={(e) => setIdiomGrade(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <strong>Nota Madurez:</strong>\r\n                            <input type=\"text\" value={maturityGrade} onChange={(e) => setMaturityGrade(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <strong>Nota Competencia:</strong>\r\n                            <input type=\"text\" value={competentGrade} onChange={(e) => setCompetentGrade(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <strong>Número de faltas:</strong>\r\n                            <input type=\"text\" value={failuresNumber} onChange={(e) => setFailuresNumber(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <strong>Nota Faltas:</strong>\r\n                            <input type=\"text\" value={failuresGrade} onChange={(e) => setFailuresGrade(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <strong>Nota Global:</strong>\r\n                            <input type=\"text\" value={globalGrade} onChange={(e) => setGlobalGrade(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <strong>Observaciones 2:</strong>\r\n                            <input type=\"text\" value={observations2} onChange={(e) => setObservations2(e.target.value)} />\r\n                        </li>\r\n                    </div>\r\n                    <div className=\"student-card\">\r\n                      <h4>DOCUMENTOS:</h4>\r\n                      {docs.map((doc, docIndex) => (\r\n                        <div key={docIndex}>\r\n                          <li>\r\n                            <strong>Documento:</strong>\r\n                            <input\r\n                              type=\"text\"\r\n                              value={doc.docalum}\r\n                              onChange={(e) => handleStudentDocChange(e, docIndex)}\r\n                            />\r\n                          </li>\r\n                          <li>\r\n                            <strong>URL:</strong>\r\n                            <input\r\n                              type=\"text\"\r\n                              value={doc.url}\r\n                              onChange={(e) => handleURLChange(e, docIndex)}\r\n                            />\r\n                          </li>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n\r\n                    <div className=\"student-card\">\r\n                      <h4>IDIOMAS:</h4>\r\n                      {idioms.map((idiom, idiomIndex) => (\r\n                        <div key={idiomIndex}>\r\n                          <li>\r\n                            <strong>Idioma:</strong>\r\n                            <input\r\n                              type=\"text\"\r\n                              value={idiom.idioma}\r\n                              onChange={(e) => handleStudentIdiomChange(e, idiomIndex)}\r\n                            />\r\n                          </li>\r\n                          <li>\r\n                            <strong>Título:</strong>\r\n                            <input\r\n                              type=\"text\"\r\n                              value={idiom.titulo}\r\n                              onChange={(e) => handleDegreeChange(e, idiomIndex)}\r\n                            />\r\n                          </li>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    <button className=\"saveButton\" type=\"button\" onClick={ButtonClickSaveStudent}>\r\n                        GUARDAR\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n  \r\n  export default GetStudentEdit;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}