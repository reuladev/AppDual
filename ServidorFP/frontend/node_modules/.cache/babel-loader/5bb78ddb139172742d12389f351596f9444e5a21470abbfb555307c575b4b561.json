{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reulo\\\\git\\\\AppDual\\\\ServidorFP\\\\frontend\\\\src\\\\components\\\\StudentEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport '../styles.css';\nimport { format } from 'date-fns'; // --> Para poder formatear la fecha DD-MM-AAAA\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GetStudentEdit() {\n  _s();\n  /*\r\n  Recibimos de anteriores componentes los arrays con los datos de alumno elegido\r\n  por el usuario, asi como su idalumno y sus preferencias.\r\n  Nota: La idea de preferencias era la de obtener todas en un solo array como el \r\n        resto de atributos de otras tablas.\r\n        El problema es que el atributo que contiene el valor del tipo de preferencia\r\n        se aplica en 3 campos diferentes en la tabla gf_alumnosfct PERO obviamente\r\n        el nombre del atributo es el mismo, por lo que al enviarlo en formato JSON\r\n        no es posible tener 3 atributos que se llaman igual, lo único que he podido\r\n        hacer es realizar 3 querrys diferentes para obtener cada preferencia por se\r\n        parado.\r\n  */\n\n  //ATRIBUTOS OBTENIDOS DE GETSTUDENT\n  const location = useLocation();\n  const {\n    studentData\n  } = location.state || {};\n  const {\n    preference1\n  } = location.state || {};\n  const {\n    preference2\n  } = location.state || {};\n  const {\n    preference3\n  } = location.state || {};\n  const {\n    studentId,\n    setStudentId\n  } = location.state || {};\n  const {\n    idiomsData,\n    setIdiomsData\n  } = location.state || {};\n  const {\n    docsData,\n    setDocsData\n  } = location.state || {};\n  const {\n    calificationsData,\n    setCalificationsData\n  } = location.state || {};\n  const preferencia = preference1[0].preferencia;\n  const [preference1Name, setPreference1Name] = useState(preference1[0].preferencia);\n  const [preference2Name, setPreference2Name] = useState(\"\");\n  const [preference3Name, setPreference3Name] = useState(\"\");\n  console.log(preference1Name);\n  console.log(preference2Name);\n  console.log(preference3Name);\n\n  //ATRIBUTOS DE ALUMNO\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [DNI, setDNI] = useState(\"\");\n  const [birthdate, setBirthdate] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [curriculumStatus, setCurriculumStatus] = useState(\"\");\n  const [admissionStatus, setAdmissionStatus] = useState(\"\");\n  const [studiesEmail, setStudiesEmail] = useState(\"\");\n  const [nationality, setNationality] = useState(\"\");\n  const [drivingLicense, setDrivingLicense] = useState(\"\");\n  const [availability, setAvailability] = useState(\"\");\n  const [SSnumber, setSSNumber] = useState(\"\");\n  const [employmentSituation, setEmploymentSituation] = useState(\"\");\n  const [legalGuardianName, setLegalGuardianName] = useState(\"\");\n  const [speciality, setSpeciality] = useState(\"\");\n  const [studentTelephone, setStudentTelephone] = useState(\"\");\n  const [familyTelephone, setFamilyTelephone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [observations, setObservations] = useState(\"\");\n  const [FCTmonth, setFCTMonth] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [CP, setCP] = useState(\"\");\n  const [locacion, setLocacion] = useState(\"\");\n\n  //ATRIBUTOS DE IDIOM\n  const [studentIdiom, setStudentIdiom] = useState(\"\");\n  const [idiomId, setIdiomId] = useState(\"\");\n  const [degree, setDegree] = useState(\"\");\n\n  //ATRIBUTOS DE DOCS\n  const [studentDocument, setStudentDocument] = useState(\"\");\n  const [URL, setURL] = useState(\"\");\n\n  // Estados para manejar la lista de documentos e idiomas\n  const [docs, setDocs] = useState(docsData);\n  const [idioms, setIdioms] = useState(idiomsData);\n\n  // Funciones de cambio para los datos específicos\n  const handleDocChange = (index, field, value) => {\n    const newDocs = [...docs];\n    newDocs[index][field] = value;\n    setDocs(newDocs);\n  };\n  const handleIdiomChange = (index, field, value) => {\n    const newIdioms = [...idioms];\n    newIdioms[index][field] = value;\n    setIdioms(newIdioms);\n  };\n\n  //ATRIBUTOS DE  CALIFICATION\n  const [averageGrade, setAverageGrade] = useState(\"\");\n  const [idiomGrade, setIdiomGrade] = useState(\"\");\n  const [maturityGrade, setMaturityGrade] = useState(\"\");\n  const [competentGrade, setCompetentGrade] = useState(\"\");\n  const [failuresNumber, setFailuresNumber] = useState(\"\");\n  const [failuresGrade, setFailuresGrade] = useState(\"\");\n  const [globalGrade, setGlobalGrade] = useState(\"\");\n  const [observations2, setObservations2] = useState(\"\");\n\n  /*\r\n  Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n  que coincidan en su nombre con lo solicitado por el usuario.\r\n  */\n  const StudentPreferences1Requests = async preference1ToShow => {\n    //const preferencia = preference1State[0].preferencia;\n    try {\n      const bodyParameters = {\n        'preferencia1': preference1ToShow\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/studentPreferences1Requests\", options);\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      const jsonResponse = await response.json();\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  /*\r\n   Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n   que coincidan en su nombre con lo solicitado por el usuario.\r\n   */\n  const StudentPreferences2Requests = async preference2ToShow => {\n    //const preferencia = preference2State[0].preferencia;\n    try {\n      const bodyParameters = {\n        'preferencia2': preference2ToShow\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/studentPreferences2Requests\", options);\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      const jsonResponse = await response.json();\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  /*\r\n   Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n   que coincidan en su nombre con lo solicitado por el usuario.\r\n   */\n  const StudentPreferences3Requests = async preference3ToShow => {\n    //const preferencia = preference3State[0].preferencia;\n    try {\n      const bodyParameters = {\n        'preferencia3': preference3ToShow\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/studentPreferences3Requests\", options);\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      const jsonResponse = await response.json();\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  // ------------------------------------------- UP DATES ! ---------------------\n\n  /*\r\n   Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n   que coincidan en su nombre con lo solicitado por el usuario.\r\n   */\n  const UpdateStudent = async (name, gender, DNI, birthdate, preference1State, preference2State, preference3State, date, curriculumStatus, admissionStatus, studiesEmail, nationality, drivingLicense, availability, SSnumber, employmentSituation, legalGuardianName, speciality, studentTelephone, familyTelephone, email, observations, FCTmonth, adress, CP, locacion, studentId) => {\n    try {\n      const bodyParameters = {\n        'nombre': name,\n        'sexo': gender,\n        'dni': DNI,\n        'fechanacimiento': birthdate,\n        'preferencia1': preference1State,\n        'preferencia2': preference2State,\n        'preferencia3': preference3State,\n        'fecha': date,\n        'estadocurriculum': curriculumStatus,\n        'estadoadmision': admissionStatus,\n        'emailinstituto': studiesEmail,\n        'nacionalidad': nationality,\n        'carnetconducir': drivingLicense,\n        'disponibilidad': availability,\n        'numeroSS': SSnumber,\n        'situacionlaboral': employmentSituation,\n        'nombretutorlegal': legalGuardianName,\n        'especialidad': speciality,\n        'telalumno': studentTelephone,\n        'telfamilia': familyTelephone,\n        'email': email,\n        'observaciones': observations,\n        'mesFCT': FCTmonth,\n        'domicilio': adress,\n        'cp': CP,\n        'localidad': locacion,\n        'idalumno': studentId\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/updateStudent\", options);\n      if (!response.ok) {\n        throw new Error('Error adding the student');\n      }\n      const jsonResponse = await response.json();\n      console.log(JSON.stringify(jsonResponse));\n      return jsonResponse;\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  /*\r\n  \r\n  */\n  const UpdateStudent_Calification = async (studentId, averageGrade, idiomGrade, maturityGrade, competentGrade, failuresNumber, failuresGrade, globalGrade, observations2) => {\n    try {\n      const bodyParameters = {\n        'idalumno': studentId,\n        'notamedia': averageGrade,\n        'notaidioma': idiomGrade,\n        'notamadurez': maturityGrade,\n        'notacompetencia': competentGrade,\n        'numfaltas': failuresNumber,\n        'notafaltas': failuresGrade,\n        'notaglobal': globalGrade,\n        'observaciones2': observations2\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/updateStudent_Calification\", options);\n      if (!response.ok) {\n        throw new Error('Error adding the student');\n      }\n      const jsonResponse = await response.json();\n      return jsonResponse;\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  /* \r\n    PRÓXIMANENTE\r\n  */\n  const UpdateStudent_Idiom = async (idiomId, degree, studentId) => {\n    try {\n      const bodyParameters = {\n        'idalumno': studentId,\n        'ididioma': idiomId,\n        'titulo': degree\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/updateStudent_Idiom\", options);\n      if (!response.ok) {\n        throw new Error('Error adding the student');\n      }\n      const jsonResponse = await response.json();\n      console.log(JSON.stringify(jsonResponse));\n      return jsonResponse;\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n  /* \r\n      PRÓXIMANENTE\r\n  */\n  const UpdateStudent_Doc = async (studentDocument, URL, studentId) => {\n    try {\n      const bodyParameters = {\n        'docalumn': studentDocument,\n        'url': URL,\n        'studentId': studentId\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/updateStudent_Doc\", options);\n      if (!response.ok) {\n        throw new Error('Error adding the student');\n      }\n      const jsonResponse = await response.json();\n      console.log(JSON.stringify(jsonResponse));\n      return jsonResponse;\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  /*\r\n    Actualizamos datos si existen, primero verificamos si hay datos \r\n    y luego extraemos del array el contenido para cada atributo.\r\n    Nota: Por algun motivo, si existe un valor 0, no va a coger el \r\n          contenido haciendolo como con el resto, encuenta hay que \r\n          extraelo antes, meterlo en una constante y settear la \r\n          constante.\r\n  */\n  useEffect(() => {\n    if (studentData.length > 0) {\n      const item = studentData[0];\n      const estadocurriculum = studentData[0].estadocurriculum;\n      const estadoadmision = studentData[0].estadoadmision;\n      const disponibilidad = studentData[0].disponibilidad;\n      console.log(\"TESTIGOS: \", item);\n      setName(item.nombre || '');\n      setGender(item.sexo || '');\n      setDNI(item.dni || '');\n      setBirthdate(item.fechanacimiento || '');\n      setDate(item.fecha || '');\n      setCurriculumStatus(estadocurriculum);\n      setAdmissionStatus(estadoadmision);\n      setStudiesEmail(item.emailinstituto || '');\n      setNationality(item.nacionalidad || '');\n      setDrivingLicense(item.carnetconducir || '');\n      setAvailability(disponibilidad);\n      setSSNumber(item.numeroSS || '');\n      setEmploymentSituation(item.situacionlaboral || '');\n      setLegalGuardianName(item.nombretutorlegal || '');\n      setSpeciality(item.especialidad || '');\n      setStudentTelephone(item.telalumno || '');\n      setFamilyTelephone(item.telfamilia || '');\n      setEmail(item.email || '');\n      setObservations(item.observaciones || '');\n      setFCTMonth(item.mesFCT || '');\n      setAddress(item.domicilio || '');\n      setCP(item.cp || '');\n      setLocacion(item.localidad || '');\n    }\n  }, [studentData]);\n\n  /*\r\n     Actualizamos datos si existen, primero verificamos si hay datos \r\n     y luego extraemos del array el contenido para cada atributo.\r\n   */\n  useEffect(() => {\n    if (idiomsData.length > 0) {\n      const item = idiomsData[0];\n      setStudentIdiom(item.idioma || '');\n      setDegree(item.titulo || '');\n    }\n  }, [idiomsData]);\n\n  /*\r\n    Actualizamos datos si existen, primero verificamos si hay datos \r\n    y luego extraemos del array el contenido para cada atributo.\r\n  */\n  useEffect(() => {\n    if (docsData.length > 0) {\n      const item = docsData[0];\n      setStudentDocument(item.docalum || '');\n      setURL(item.url || '');\n    }\n  }, [docsData]);\n\n  /*\r\n    Actualizamos datos si existen, primero verificamos si hay datos \r\n    y luego extraemos del array el contenido para cada atributo.\r\n  */\n  useEffect(() => {\n    if (calificationsData.length > 0) {\n      const item = calificationsData[0];\n      const notafaltas = calificationsData[0].notafaltas;\n      setAverageGrade(item.notamedia || '');\n      setIdiomGrade(item.notaidioma || '');\n      setMaturityGrade(item.notamadurez || '');\n      setCompetentGrade(item.notacompetencia || '');\n      setFailuresNumber(item.numfaltas || '');\n      setFailuresGrade(notafaltas);\n      setGlobalGrade(item.notaglobal || '');\n      setObservations2(item.observaciones || '');\n    }\n  }, [calificationsData]);\n\n  /*\r\n    Al pulsar el boton de editar el usuario, lo redirije al componente\r\n    studentEdit para poder editar cada campo.\r\n    Tambien envia a este todos los datos necesarios para poder editarlos.\r\n  */\n  const ButtonClickSaveStudent = () => {\n    UpdateStudent(name, gender, DNI, birthdate, date, curriculumStatus, admissionStatus, studiesEmail, nationality, drivingLicense, availability, SSnumber, employmentSituation, legalGuardianName, speciality, studentTelephone, familyTelephone, email, observations, FCTmonth, address, CP, locacion, studentId);\n    //UpdateStudent_Idiom();\n    for (let i = 0; i < docsData.length; i++) {\n      setStudentDocument(docsData[i].idioma);\n      setStudentDocument(docsData[i].titulo);\n      UpdateStudent_Doc(studentDocument, URL, studentId);\n    }\n    UpdateStudent_Calification(studentId, averageGrade, idiomGrade, maturityGrade, competentGrade, failuresNumber, failuresGrade, globalGrade, observations2);\n  };\n\n  //Renderizamos\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-card\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"student-info-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Nombre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Sexo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: gender,\n            onChange: e => setGender(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"DNI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: DNI,\n            onChange: e => setDNI(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Nacionalidad:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: nationality,\n            onChange: e => setNationality(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fecha de nacimiento:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: birthdate,\n            onChange: e => setBirthdate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fecha registro de alumno:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: date,\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Estado Curriculum:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: curriculumStatus,\n            onChange: e => setCurriculumStatus(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Estado Admisi\\xF3n:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: admissionStatus,\n            onChange: e => setAdmissionStatus(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email Instituto:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: studiesEmail,\n            onChange: e => setStudiesEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email personal:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tel\\xE9fono Alumno:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            value: studentTelephone,\n            onChange: e => setStudentTelephone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tel\\xE9fono Familia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            value: familyTelephone,\n            onChange: e => setFamilyTelephone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Carnet de Conducir:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: drivingLicense,\n            onChange: e => setDrivingLicense(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Disponibilidad:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: availability,\n            onChange: e => setAvailability(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"N\\xFAmero SS:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: SSnumber,\n            onChange: e => setSSNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Situaci\\xF3n Laboral:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: employmentSituation,\n            onChange: e => setEmploymentSituation(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Mes FCT:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: FCTmonth,\n            onChange: e => setFCTMonth(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Domicilio:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: address,\n            onChange: e => setAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"C\\xF3digo Postal:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: CP,\n            onChange: e => setCP(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Localidad:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: locacion,\n            onChange: e => setLocacion(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Especialidad:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: speciality,\n            onChange: e => setSpeciality(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Nombre Tutor Legal:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: legalGuardianName,\n            onChange: e => setLegalGuardianName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Observaciones:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: observations,\n            onChange: e => setObservations(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nota Media:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: averageGrade,\n              onChange: e => setAverageGrade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nota Idioma:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: idiomGrade,\n              onChange: e => setIdiomGrade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nota Madurez:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: maturityGrade,\n              onChange: e => setMaturityGrade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nota Competencia:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: competentGrade,\n              onChange: e => setCompetentGrade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"N\\xFAmero de faltas:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: failuresNumber,\n              onChange: e => setFailuresNumber(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nota Faltas:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: failuresGrade,\n              onChange: e => setFailuresGrade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nota Global:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: globalGrade,\n              onChange: e => setGlobalGrade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Observaciones 2:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: observations2,\n              onChange: e => setObservations2(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"DOCUMENTOS:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 23\n          }, this), docs.map((doc, docIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Documento:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: doc.docalum,\n                onChange: e => handleDocChange(docIndex, 'docalum', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"URL:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: doc.url,\n                onChange: e => handleDocChange(docIndex, 'url', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 27\n            }, this)]\n          }, docIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"IDIOMAS:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 23\n          }, this), idioms.map((idiom, idiomIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Idioma:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: idiom.idioma,\n                onChange: e => handleIdiomChange(idiomIndex, 'idioma', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"T\\xEDtulo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: idiom.titulo,\n                onChange: e => handleIdiomChange(idiomIndex, 'titulo', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 27\n            }, this)]\n          }, idiomIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"saveButton\",\n          type: \"button\",\n          onClick: ButtonClickSaveStudent,\n          children: \"GUARDAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 9\n  }, this);\n}\n_s(GetStudentEdit, \"YvuXN7l4biAn26Wljaf/bLdE/6U=\", false, function () {\n  return [useLocation];\n});\n_c = GetStudentEdit;\nexport default GetStudentEdit;\nvar _c;\n$RefreshReg$(_c, \"GetStudentEdit\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","format","jsxDEV","_jsxDEV","GetStudentEdit","_s","location","studentData","state","preference1","preference2","preference3","studentId","setStudentId","idiomsData","setIdiomsData","docsData","setDocsData","calificationsData","setCalificationsData","preferencia","preference1Name","setPreference1Name","preference2Name","setPreference2Name","preference3Name","setPreference3Name","console","log","name","setName","gender","setGender","DNI","setDNI","birthdate","setBirthdate","date","setDate","curriculumStatus","setCurriculumStatus","admissionStatus","setAdmissionStatus","studiesEmail","setStudiesEmail","nationality","setNationality","drivingLicense","setDrivingLicense","availability","setAvailability","SSnumber","setSSNumber","employmentSituation","setEmploymentSituation","legalGuardianName","setLegalGuardianName","speciality","setSpeciality","studentTelephone","setStudentTelephone","familyTelephone","setFamilyTelephone","email","setEmail","observations","setObservations","FCTmonth","setFCTMonth","address","setAddress","CP","setCP","locacion","setLocacion","studentIdiom","setStudentIdiom","idiomId","setIdiomId","degree","setDegree","studentDocument","setStudentDocument","URL","setURL","docs","setDocs","idioms","setIdioms","handleDocChange","index","field","value","newDocs","handleIdiomChange","newIdioms","averageGrade","setAverageGrade","idiomGrade","setIdiomGrade","maturityGrade","setMaturityGrade","competentGrade","setCompetentGrade","failuresNumber","setFailuresNumber","failuresGrade","setFailuresGrade","globalGrade","setGlobalGrade","observations2","setObservations2","StudentPreferences1Requests","preference1ToShow","bodyParameters","options","method","headers","body","JSON","stringify","response","fetch","ok","Error","jsonResponse","json","error","message","StudentPreferences2Requests","preference2ToShow","StudentPreferences3Requests","preference3ToShow","UpdateStudent","preference1State","preference2State","preference3State","adress","UpdateStudent_Calification","UpdateStudent_Idiom","UpdateStudent_Doc","length","item","estadocurriculum","estadoadmision","disponibilidad","nombre","sexo","dni","fechanacimiento","fecha","emailinstituto","nacionalidad","carnetconducir","numeroSS","situacionlaboral","nombretutorlegal","especialidad","telalumno","telfamilia","observaciones","mesFCT","domicilio","cp","localidad","idioma","titulo","docalum","url","notafaltas","notamedia","notaidioma","notamadurez","notacompetencia","numfaltas","notaglobal","ButtonClickSaveStudent","i","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","map","doc","docIndex","idiom","idiomIndex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/reulo/git/AppDual/ServidorFP/frontend/src/components/StudentEdit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport '../styles.css';\r\nimport { format } from 'date-fns'; // --> Para poder formatear la fecha DD-MM-AAAA\r\n\r\nfunction GetStudentEdit() {\r\n    /*\r\n    Recibimos de anteriores componentes los arrays con los datos de alumno elegido\r\n    por el usuario, asi como su idalumno y sus preferencias.\r\n    Nota: La idea de preferencias era la de obtener todas en un solo array como el \r\n          resto de atributos de otras tablas.\r\n          El problema es que el atributo que contiene el valor del tipo de preferencia\r\n          se aplica en 3 campos diferentes en la tabla gf_alumnosfct PERO obviamente\r\n          el nombre del atributo es el mismo, por lo que al enviarlo en formato JSON\r\n          no es posible tener 3 atributos que se llaman igual, lo único que he podido\r\n          hacer es realizar 3 querrys diferentes para obtener cada preferencia por se\r\n          parado.\r\n    */\r\n\r\n    //ATRIBUTOS OBTENIDOS DE GETSTUDENT\r\n    const location = useLocation();\r\n    const { studentData } = location.state || {};\r\n    const { preference1} = location.state || {};\r\n    const { preference2} = location.state || {};\r\n    const { preference3} = location.state || {};\r\n    const { studentId, setStudentId } = location.state || {};\r\n    const { idiomsData, setIdiomsData} = location.state || {};\r\n    const { docsData, setDocsData} = location.state || {};\r\n    const { calificationsData, setCalificationsData} = location.state || {};\r\n    const preferencia = preference1[0].preferencia;\r\n\r\n    const [preference1Name, setPreference1Name] = useState(preference1[0].preferencia);\r\n    const [preference2Name, setPreference2Name] = useState(\"\");\r\n    const [preference3Name, setPreference3Name] = useState(\"\");\r\n    console.log(preference1Name);\r\n    console.log(preference2Name);\r\n    console.log(preference3Name);\r\n\r\n\r\n    //ATRIBUTOS DE ALUMNO\r\n    const [name, setName] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n    const [DNI, setDNI] = useState(\"\");\r\n    const [birthdate, setBirthdate] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [curriculumStatus, setCurriculumStatus] = useState(\"\");\r\n    const [admissionStatus, setAdmissionStatus] = useState(\"\");\r\n    const [studiesEmail, setStudiesEmail] = useState(\"\");\r\n    const [nationality, setNationality] = useState(\"\");\r\n    const [drivingLicense, setDrivingLicense] = useState(\"\");\r\n    const [availability, setAvailability] = useState(\"\");\r\n    const [SSnumber, setSSNumber] = useState(\"\");\r\n    const [employmentSituation, setEmploymentSituation] = useState(\"\");\r\n    const [legalGuardianName, setLegalGuardianName] = useState(\"\");\r\n    const [speciality, setSpeciality] = useState(\"\");\r\n    const [studentTelephone, setStudentTelephone] = useState(\"\");\r\n    const [familyTelephone, setFamilyTelephone] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [observations, setObservations] = useState(\"\");\r\n    const [FCTmonth, setFCTMonth] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [CP, setCP] = useState(\"\");\r\n    const [locacion, setLocacion] = useState(\"\");\r\n\r\n    //ATRIBUTOS DE IDIOM\r\n    const [studentIdiom, setStudentIdiom] = useState(\"\");\r\n    const [idiomId, setIdiomId] = useState(\"\");\r\n    const [degree, setDegree] = useState(\"\");\r\n\r\n    //ATRIBUTOS DE DOCS\r\n    const [studentDocument, setStudentDocument] = useState(\"\");\r\n    const [URL, setURL] = useState(\"\");\r\n\r\n\r\n    // Estados para manejar la lista de documentos e idiomas\r\n    const [docs, setDocs] = useState(docsData);\r\n    const [idioms, setIdioms] = useState(idiomsData);\r\n\r\n    // Funciones de cambio para los datos específicos\r\n    const handleDocChange = (index, field, value) => {\r\n      const newDocs = [...docs];\r\n      newDocs[index][field] = value;\r\n      setDocs(newDocs);\r\n    };\r\n\r\n    const handleIdiomChange = (index, field, value) => {\r\n      const newIdioms = [...idioms];\r\n      newIdioms[index][field] = value;\r\n      setIdioms(newIdioms);\r\n    };\r\n\r\n    //ATRIBUTOS DE  CALIFICATION\r\n    const [averageGrade, setAverageGrade] = useState(\"\");\r\n    const [idiomGrade, setIdiomGrade] = useState(\"\");\r\n    const [maturityGrade, setMaturityGrade] = useState(\"\");\r\n    const [competentGrade, setCompetentGrade] = useState(\"\");\r\n    const [failuresNumber, setFailuresNumber] = useState(\"\");\r\n    const [failuresGrade, setFailuresGrade] = useState(\"\");\r\n    const [globalGrade, setGlobalGrade] = useState(\"\");\r\n    const [observations2, setObservations2] = useState(\"\");\r\n    \r\n    /*\r\n    Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n    que coincidan en su nombre con lo solicitado por el usuario.\r\n    */\r\n    const StudentPreferences1Requests = async (preference1ToShow) => {\r\n      //const preferencia = preference1State[0].preferencia;\r\n      try {\r\n          const bodyParameters = {\r\n          'preferencia1': preference1ToShow\r\n          };\r\n          const options = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(bodyParameters)\r\n          };\r\n          const response = await fetch(\"/studentPreferences1Requests\", options);\r\n          if (!response.ok) {\r\n          throw new Error('Error en la solicitud');\r\n          }\r\n          const jsonResponse = await response.json();\r\n      } catch (error) {\r\n          console.error('Error:', error.message);\r\n      }\r\n   };\r\n\r\n   /*\r\n    Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n    que coincidan en su nombre con lo solicitado por el usuario.\r\n    */\r\n    const StudentPreferences2Requests = async (preference2ToShow) => {\r\n      //const preferencia = preference2State[0].preferencia;\r\n      try {\r\n          const bodyParameters = {\r\n          'preferencia2': preference2ToShow\r\n          };\r\n          const options = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(bodyParameters)\r\n          };\r\n          const response = await fetch(\"/studentPreferences2Requests\", options);\r\n          if (!response.ok) {\r\n          throw new Error('Error en la solicitud');\r\n          }\r\n          const jsonResponse = await response.json();\r\n      } catch (error) {\r\n          console.error('Error:', error.message);\r\n      }\r\n   };\r\n\r\n   /*\r\n    Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n    que coincidan en su nombre con lo solicitado por el usuario.\r\n    */\r\n    const StudentPreferences3Requests = async (preference3ToShow) => {\r\n      //const preferencia = preference3State[0].preferencia;\r\n      try {\r\n          const bodyParameters = {\r\n          'preferencia3': preference3ToShow\r\n          };\r\n          const options = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(bodyParameters)\r\n          };\r\n          const response = await fetch(\"/studentPreferences3Requests\", options);\r\n          if (!response.ok) {\r\n          throw new Error('Error en la solicitud');\r\n          }\r\n          const jsonResponse = await response.json();\r\n      } catch (error) {\r\n          console.error('Error:', error.message);\r\n      }\r\n   };\r\n\r\n\r\n   // ------------------------------------------- UP DATES ! ---------------------\r\n\r\n   /*\r\n    Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n    que coincidan en su nombre con lo solicitado por el usuario.\r\n    */\r\n    const UpdateStudent = async (\r\n      name, gender, DNI, birthdate, preference1State, preference2State, preference3State, date, curriculumStatus, admissionStatus, studiesEmail,\r\n      nationality, drivingLicense, availability, SSnumber, employmentSituation, legalGuardianName,\r\n      speciality, studentTelephone, familyTelephone, email, observations, FCTmonth, adress, CP, locacion, studentId\r\n    ) => {\r\n      try {\r\n        const bodyParameters = {\r\n          'nombre': name,\r\n          'sexo': gender,\r\n          'dni': DNI,\r\n          'fechanacimiento': birthdate,\r\n          'preferencia1': preference1State,\r\n          'preferencia2': preference2State,\r\n          'preferencia3': preference3State,\r\n          'fecha': date,\r\n          'estadocurriculum': curriculumStatus,\r\n          'estadoadmision': admissionStatus,\r\n          'emailinstituto': studiesEmail,\r\n          'nacionalidad': nationality,\r\n          'carnetconducir': drivingLicense,\r\n          'disponibilidad': availability,\r\n          'numeroSS': SSnumber,\r\n          'situacionlaboral': employmentSituation,\r\n          'nombretutorlegal': legalGuardianName,\r\n          'especialidad': speciality,\r\n          'telalumno': studentTelephone,\r\n          'telfamilia': familyTelephone,\r\n          'email': email,\r\n          'observaciones': observations,\r\n          'mesFCT': FCTmonth,\r\n          'domicilio': adress,\r\n          'cp': CP,\r\n          'localidad': locacion,\r\n          'idalumno': studentId\r\n        };\r\n\r\n        const options = {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(bodyParameters)\r\n        };\r\n\r\n        const response = await fetch(\"/updateStudent\", options);\r\n        if (!response.ok) {\r\n          throw new Error('Error adding the student');\r\n        }\r\n        const jsonResponse = await response.json();\r\n        console.log(JSON.stringify(jsonResponse));\r\n        return jsonResponse;\r\n      } catch (error) {\r\n        console.error('Error:', error.message);\r\n      }\r\n    };\r\n\r\n      /*\r\n      \r\n      */\r\n    const UpdateStudent_Calification = async (studentId, averageGrade, idiomGrade, maturityGrade, competentGrade, failuresNumber, failuresGrade, globalGrade, observations2) => {\r\n      try {\r\n        const bodyParameters = {\r\n          'idalumno': studentId,\r\n          'notamedia': averageGrade,\r\n          'notaidioma': idiomGrade,\r\n          'notamadurez': maturityGrade,\r\n          'notacompetencia': competentGrade,\r\n          'numfaltas': failuresNumber,\r\n          'notafaltas': failuresGrade,\r\n          'notaglobal': globalGrade,\r\n          'observaciones2': observations2\r\n        }\r\n  \r\n        const options = {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(bodyParameters)\r\n        }\r\n        \r\n        const response = await fetch(\"/updateStudent_Calification\", options);\r\n        if (!response.ok) {\r\n          throw new Error('Error adding the student');\r\n        }\r\n        const jsonResponse = await response.json();\r\n        return jsonResponse;\r\n      } catch (error) {\r\n        console.error('Error:', error.message);\r\n      }\r\n    }\r\n\r\n    /* \r\n      PRÓXIMANENTE\r\n  */\r\n  const UpdateStudent_Idiom = async (idiomId, degree, studentId) => {\r\n    try {\r\n      const bodyParameters = {\r\n        'idalumno': studentId,\r\n        'ididioma': idiomId,\r\n        'titulo': degree\r\n      }\r\n\r\n      const options = {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(bodyParameters)\r\n      }\r\n      \r\n      const response = await fetch(\"/updateStudent_Idiom\", options);\r\n      if (!response.ok) {\r\n        throw new Error('Error adding the student');\r\n      }\r\n      const jsonResponse = await response.json();\r\n      console.log(JSON.stringify(jsonResponse));\r\n      return jsonResponse;\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n    }\r\n  }\r\n  /* \r\n      PRÓXIMANENTE\r\n  */\r\n  const UpdateStudent_Doc = async (studentDocument, URL,studentId) => {\r\n    try {\r\n      const bodyParameters = {\r\n        'docalumn': studentDocument,\r\n        'url': URL,\r\n        'studentId': studentId\r\n      }\r\n\r\n      const options = {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(bodyParameters)\r\n      }\r\n      \r\n      const response = await fetch(\"/updateStudent_Doc\", options);\r\n      if (!response.ok) {\r\n        throw new Error('Error adding the student');\r\n      }\r\n      const jsonResponse = await response.json();\r\n      console.log(JSON.stringify(jsonResponse));\r\n      return jsonResponse;\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n    }\r\n  }\r\n\r\n\r\n    /*\r\n      Actualizamos datos si existen, primero verificamos si hay datos \r\n      y luego extraemos del array el contenido para cada atributo.\r\n      Nota: Por algun motivo, si existe un valor 0, no va a coger el \r\n            contenido haciendolo como con el resto, encuenta hay que \r\n            extraelo antes, meterlo en una constante y settear la \r\n            constante.\r\n    */\r\n    useEffect(() => {\r\n      if (studentData.length > 0) {\r\n        const item = studentData[0];\r\n        const estadocurriculum = studentData[0].estadocurriculum;\r\n        const estadoadmision = studentData[0].estadoadmision;\r\n        const disponibilidad = studentData[0].disponibilidad;\r\n        console.log(\"TESTIGOS: \",item);\r\n        setName(item.nombre || '');\r\n        setGender(item.sexo || '');\r\n        setDNI(item.dni || '');\r\n        setBirthdate(item.fechanacimiento || '');\r\n        setDate(item.fecha || '');\r\n        setCurriculumStatus(estadocurriculum);\r\n        setAdmissionStatus(estadoadmision);\r\n        setStudiesEmail(item.emailinstituto|| '');\r\n        setNationality(item.nacionalidad || '');\r\n        setDrivingLicense(item.carnetconducir || '');\r\n        setAvailability(disponibilidad);\r\n        setSSNumber(item.numeroSS || '');\r\n        setEmploymentSituation(item.situacionlaboral || '');\r\n        setLegalGuardianName(item.nombretutorlegal || '');\r\n        setSpeciality(item.especialidad || '');\r\n        setStudentTelephone(item.telalumno|| '');\r\n        setFamilyTelephone(item.telfamilia || '');\r\n        setEmail(item.email || '');\r\n        setObservations(item.observaciones || '');\r\n        setFCTMonth(item.mesFCT || '');\r\n        setAddress(item.domicilio || '');\r\n        setCP(item.cp || '');\r\n        setLocacion(item.localidad || '');\r\n      }\r\n    }, [studentData]);\r\n\r\n     /*\r\n        Actualizamos datos si existen, primero verificamos si hay datos \r\n        y luego extraemos del array el contenido para cada atributo.\r\n      */\r\n    useEffect(() => {\r\n      if (idiomsData.length > 0) {\r\n          const item = idiomsData[0];\r\n          setStudentIdiom(item.idioma || '');\r\n          setDegree(item.titulo || '');\r\n      }\r\n    }, [idiomsData]);\r\n\r\n      /*\r\n        Actualizamos datos si existen, primero verificamos si hay datos \r\n        y luego extraemos del array el contenido para cada atributo.\r\n      */\r\n    useEffect(() => {\r\n      if (docsData.length > 0) {\r\n          const item = docsData[0];\r\n          setStudentDocument(item.docalum|| '');\r\n          setURL(item.url || '');\r\n      }\r\n    }, [docsData]);\r\n\r\n      /*\r\n        Actualizamos datos si existen, primero verificamos si hay datos \r\n        y luego extraemos del array el contenido para cada atributo.\r\n      */\r\n    useEffect(() => {\r\n      if (calificationsData.length > 0) {\r\n          const item = calificationsData[0];\r\n          const notafaltas = calificationsData[0].notafaltas;\r\n          setAverageGrade(item.notamedia || '');\r\n          setIdiomGrade(item.notaidioma|| '');\r\n          setMaturityGrade(item.notamadurez || '');\r\n          setCompetentGrade(item.notacompetencia || '');\r\n          setFailuresNumber(item.numfaltas || '');\r\n          setFailuresGrade(notafaltas);\r\n          setGlobalGrade(item.notaglobal || '');\r\n          setObservations2(item.observaciones || '');\r\n      }\r\n    }, [calificationsData]);\r\n\r\n    /*\r\n      Al pulsar el boton de editar el usuario, lo redirije al componente\r\n      studentEdit para poder editar cada campo.\r\n      Tambien envia a este todos los datos necesarios para poder editarlos.\r\n    */\r\n    const ButtonClickSaveStudent = () => {\r\n        UpdateStudent(name, gender, DNI, birthdate, date, curriculumStatus, admissionStatus, studiesEmail,\r\n          nationality, drivingLicense, availability, SSnumber, employmentSituation, legalGuardianName,\r\n          speciality, studentTelephone, familyTelephone, email, observations, FCTmonth, address, CP, locacion, studentId);\r\n        //UpdateStudent_Idiom();\r\n        for (let i = 0; i < docsData.length;i++){\r\n          setStudentDocument(docsData[i].idioma);\r\n          setStudentDocument(docsData[i].titulo);\r\n          UpdateStudent_Doc (studentDocument, URL,studentId);\r\n        }\r\n        UpdateStudent_Calification(studentId, averageGrade, idiomGrade, maturityGrade, competentGrade, failuresNumber, failuresGrade, globalGrade, observations2);\r\n      }\r\n\r\n  //Renderizamos\r\n  return (\r\n        <div>\r\n            <div className=\"student-card\">\r\n                <ul className=\"student-info-list\">\r\n                    <li>\r\n                        <strong>Nombre:</strong>\r\n                        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Sexo:</strong>\r\n                        <input type=\"text\" value={gender} onChange={(e) => setGender(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>DNI:</strong>\r\n                        <input type=\"text\" value={DNI} onChange={(e) => setDNI(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Nacionalidad:</strong>\r\n                        <input type=\"text\" value={nationality} onChange={(e) => setNationality(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Fecha de nacimiento:</strong>\r\n                        <input type=\"text\" value={birthdate} onChange={(e) => setBirthdate(e.target.value)} />\r\n                    </li>\r\n                    \r\n                    <li>\r\n                        <strong>Fecha registro de alumno:</strong>\r\n                        <input type=\"text\" value={date} onChange={(e) => setDate(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Estado Curriculum:</strong>\r\n                        <input type=\"text\" value={curriculumStatus} onChange={(e) => setCurriculumStatus(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Estado Admisión:</strong>\r\n                        <input type=\"text\" value={admissionStatus} onChange={(e) => setAdmissionStatus(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Email Instituto:</strong>\r\n                        <input type=\"email\" value={studiesEmail} onChange={(e) => setStudiesEmail(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Email personal:</strong>\r\n                        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Teléfono Alumno:</strong>\r\n                        <input type=\"tel\" value={studentTelephone} onChange={(e) => setStudentTelephone(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Teléfono Familia:</strong>\r\n                        <input type=\"tel\" value={familyTelephone} onChange={(e) => setFamilyTelephone(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Carnet de Conducir:</strong>\r\n                        <input type=\"text\" value={drivingLicense} onChange={(e) => setDrivingLicense(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Disponibilidad:</strong>\r\n                        <input type=\"text\" value={availability} onChange={(e) => setAvailability(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Número SS:</strong>\r\n                        <input type=\"text\" value={SSnumber} onChange={(e) => setSSNumber(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Situación Laboral:</strong>\r\n                        <input type=\"text\" value={employmentSituation} onChange={(e) => setEmploymentSituation(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Mes FCT:</strong>\r\n                        <input type=\"text\" value={FCTmonth} onChange={(e) => setFCTMonth(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Domicilio:</strong>\r\n                        <input type=\"text\" value={address} onChange={(e) => setAddress(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Código Postal:</strong>\r\n                        <input type=\"text\" value={CP} onChange={(e) => setCP(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Localidad:</strong>\r\n                        <input type=\"text\" value={locacion} onChange={(e) => setLocacion(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Especialidad:</strong>\r\n                        <input type=\"text\" value={speciality} onChange={(e) => setSpeciality(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Nombre Tutor Legal:</strong>\r\n                        <input type=\"text\" value={legalGuardianName} onChange={(e) => setLegalGuardianName(e.target.value)} />\r\n                    </li>\r\n                    <li>\r\n                        <strong>Observaciones:</strong>\r\n                        <input type=\"text\" value={observations} onChange={(e) => setObservations(e.target.value)} />\r\n                    </li>\r\n                    <div className=\"student-card\">\r\n                        <li>\r\n                            <strong>Nota Media:</strong>\r\n                            <input type=\"text\" value={averageGrade} onChange={(e) => setAverageGrade(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <strong>Nota Idioma:</strong>\r\n                            <input type=\"text\" value={idiomGrade} onChange={(e) => setIdiomGrade(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <strong>Nota Madurez:</strong>\r\n                            <input type=\"text\" value={maturityGrade} onChange={(e) => setMaturityGrade(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <strong>Nota Competencia:</strong>\r\n                            <input type=\"text\" value={competentGrade} onChange={(e) => setCompetentGrade(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <strong>Número de faltas:</strong>\r\n                            <input type=\"text\" value={failuresNumber} onChange={(e) => setFailuresNumber(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <strong>Nota Faltas:</strong>\r\n                            <input type=\"text\" value={failuresGrade} onChange={(e) => setFailuresGrade(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <strong>Nota Global:</strong>\r\n                            <input type=\"text\" value={globalGrade} onChange={(e) => setGlobalGrade(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <strong>Observaciones 2:</strong>\r\n                            <input type=\"text\" value={observations2} onChange={(e) => setObservations2(e.target.value)} />\r\n                        </li>\r\n                    </div>\r\n                    {/* Documentos */}\r\n                    <div className=\"student-card\">\r\n                      <h4>DOCUMENTOS:</h4>\r\n                      {docs.map((doc, docIndex) => (\r\n                        <div key={docIndex}>\r\n                          <li>\r\n                            <strong>Documento:</strong>\r\n                            <input\r\n                              type=\"text\"\r\n                              value={doc.docalum}\r\n                              onChange={(e) => handleDocChange(docIndex, 'docalum', e.target.value)}\r\n                            />\r\n                          </li>\r\n                          <li>\r\n                            <strong>URL:</strong>\r\n                            <input\r\n                              type=\"text\"\r\n                              value={doc.url}\r\n                              onChange={(e) => handleDocChange(docIndex, 'url', e.target.value)}\r\n                            />\r\n                          </li>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n\r\n                    <div className=\"student-card\">\r\n                      <h4>IDIOMAS:</h4>\r\n                      {idioms.map((idiom, idiomIndex) => (\r\n                        <div key={idiomIndex}>\r\n                          <li>\r\n                            <strong>Idioma:</strong>\r\n                            <input\r\n                              type=\"text\"\r\n                              value={idiom.idioma}\r\n                              onChange={(e) => handleIdiomChange(idiomIndex, 'idioma', e.target.value)}\r\n                            />\r\n                          </li>\r\n                          <li>\r\n                            <strong>Título:</strong>\r\n                            <input\r\n                              type=\"text\"\r\n                              value={idiom.titulo}\r\n                              onChange={(e) => handleIdiomChange(idiomIndex, 'titulo', e.target.value)}\r\n                            />\r\n                          </li>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    <button className=\"saveButton\" type=\"button\" onClick={ButtonClickSaveStudent}>\r\n                        GUARDAR\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n  \r\n  export default GetStudentEdit;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}