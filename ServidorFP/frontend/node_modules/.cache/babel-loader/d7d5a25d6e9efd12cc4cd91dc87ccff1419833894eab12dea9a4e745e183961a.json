{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reulo\\\\OneDrive\\\\Escritorio\\\\ServidorFP\\\\frontend\\\\src\\\\components\\\\GetStudent.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router-dom'; // -> Esto es un hook, nos permite acceder al objeto actual.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GetStudent() {\n  _s();\n  const location = useLocation(); // Obtiene el objeto location\n  const {\n    studentId\n  } = location.state || {}; // Obtén el idalumno del estado de navegación\n\n  /*\r\n  Solicitamos la peticion para que nos devuela los datos del / los alumnos\r\n  que coincidan en su nombre con lo solicitado por el usuario.\r\n  */\n  const GetStudentDataByName = async studentId => {\n    try {\n      const bodyParameters = {\n        'nombre': studentId\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyParameters)\n      };\n      const response = await fetch(\"/getStudentDataByName\", options);\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      const jsonResponse = await response.json();\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ID del Alumno: \", studentId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(GetStudent, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = GetStudent;\nexport default GetStudent;\nvar _c;\n$RefreshReg$(_c, \"GetStudent\");","map":{"version":3,"names":["React","useLocation","jsxDEV","_jsxDEV","GetStudent","_s","location","studentId","state","GetStudentDataByName","bodyParameters","options","method","headers","body","JSON","stringify","response","fetch","ok","Error","jsonResponse","json","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/reulo/OneDrive/Escritorio/ServidorFP/frontend/src/components/GetStudent.js"],"sourcesContent":["import React from 'react';\r\nimport { useLocation } from 'react-router-dom'; // -> Esto es un hook, nos permite acceder al objeto actual.\r\n\r\nfunction GetStudent() {\r\n  const location = useLocation(); // Obtiene el objeto location\r\n  const { studentId } = location.state || {}; // Obtén el idalumno del estado de navegación\r\n\r\n/*\r\nSolicitamos la peticion para que nos devuela los datos del / los alumnos\r\nque coincidan en su nombre con lo solicitado por el usuario.\r\n*/\r\nconst GetStudentDataByName = async (studentId) => {\r\n    try {\r\n        const bodyParameters = {\r\n        'nombre': studentId\r\n        };\r\n        const options = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(bodyParameters)\r\n        };\r\n        const response = await fetch(\"/getStudentDataByName\", options);\r\n        if (!response.ok) {\r\n        throw new Error('Error en la solicitud');\r\n        }\r\n        const jsonResponse = await response.json();\r\n    } catch (error) {\r\n        console.error('Error:', error.message);\r\n    }\r\n    };\r\n\r\n  return (\r\n    <div>\r\n      <p>ID del Alumno: {studentId}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GetStudent;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM;IAAEM;EAAU,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;;EAE9C;AACA;AACA;AACA;EACA,MAAMC,oBAAoB,GAAG,MAAOF,SAAS,IAAK;IAC9C,IAAI;MACA,MAAMG,cAAc,GAAG;QACvB,QAAQ,EAAEH;MACV,CAAC;MACD,MAAMI,OAAO,GAAG;QAChBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,cAAc;MACnC,CAAC;MACD,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,EAAEP,OAAO,CAAC;MAC9D,IAAI,CAACM,QAAQ,CAACE,EAAE,EAAE;QAClB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MACxC;MACA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC1C;EACA,CAAC;EAEH,oBACEtB,OAAA;IAAAuB,QAAA,eACEvB,OAAA;MAAAuB,QAAA,GAAG,iBAAe,EAACnB,SAAS;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV;AAACzB,EAAA,CAjCQD,UAAU;EAAA,QACAH,WAAW;AAAA;AAAA8B,EAAA,GADrB3B,UAAU;AAmCnB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}